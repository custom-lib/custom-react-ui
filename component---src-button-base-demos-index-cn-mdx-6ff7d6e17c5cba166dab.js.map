{"version":3,"sources":["webpack:///../src/ButtonBase/demos/index.cn.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","ButtonBase","variant","size","parentName","padding","fontSize","width","height","fullWidth","color","borderColor","bgColor","borderRadius","boxShadow","borderWidth","borderStyle","className","style","disabled","as","href","target","isMDXComponent"],"mappings":"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","file":"component---src-button-base-demos-index-cn-mdx-6ff7d6e17c5cba166dab.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Codes/custom-ui-old/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport ButtonBase from \"../index\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h4 {...{\n      \"id\": \"简介\"\n    }}>{`简介`}</h4>\n    <p>{`轻量的，只包含基础样式的按钮组件。`}</p>\n    <h2 {...{\n      \"id\": \"类型\"\n    }}>{`类型`}</h2>\n    <p>{`通过设置 variant 为 \"text\", \"outlined\", \"contained\" 改变按钮的类型。若不设置 variant，则类型默认为 \"outlined\"。`}</p>\n    <Playground __position={0} __code={'<ButtonBase variant=\\\"text\\\">text</ButtonBase>\\n<ButtonBase variant=\\\"outlined\\\">outlined</ButtonBase>\\n<ButtonBase variant=\\\"contained\\\">contained</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase variant=\"text\" mdxType=\"ButtonBase\">text</ButtonBase>\n    <ButtonBase variant=\"outlined\" mdxType=\"ButtonBase\">outlined</ButtonBase>\n    <ButtonBase variant=\"contained\" mdxType=\"ButtonBase\">contained</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"可选尺寸\"\n    }}>{`可选尺寸`}</h2>\n    <p>{`通过设置 size 为 \"large\" , \"small\" , \"normal\" , \"small\" 分别把按钮设为四种不同尺寸。若不设置 size，则尺寸默认为 \"normal\"。`}</p>\n    <Playground __position={2} __code={'<ButtonBase size=\\\"large\\\">large</ButtonBase>\\n<ButtonBase size=\\\"big\\\">big</ButtonBase>\\n<ButtonBase size=\\\"normal\\\">默认为normal</ButtonBase>\\n<ButtonBase size=\\\"small\\\">small</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase size=\"large\" mdxType=\"ButtonBase\">large</ButtonBase>\n    <ButtonBase size=\"big\" mdxType=\"ButtonBase\">big</ButtonBase>\n    <ButtonBase size=\"normal\" mdxType=\"ButtonBase\">默认为normal</ButtonBase>\n    <ButtonBase size=\"small\" mdxType=\"ButtonBase\">small</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"自适应尺寸\"\n    }}>{`自适应尺寸`}</h2>\n    <p>{`通过设置 size 为\"合法的css长度单位\"指定按钮内的字体大小，按钮的边界也会根据size自适应。`}</p>\n    <p>{`如果 size 非法，将会被设置为默认大小。`}</p>\n    <Playground __position={4} __code={'<ButtonBase size={20}>number</ButtonBase>\\n<ButtonBase size=\\\"24px\\\">with px</ButtonBase>\\n<ButtonBase size=\\\"1.5em\\\">with em</ButtonBase>\\n<ButtonBase size=\\\"2vw\\\">with vw</ButtonBase>\\n<ButtonBase size=\\\"30%\\\">with %</ButtonBase>\\n<ButtonBase size=\\\"40\\\">illegal</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase size={20} mdxType=\"ButtonBase\">number</ButtonBase>\n    <ButtonBase size=\"24px\" mdxType=\"ButtonBase\">with px</ButtonBase>\n    <ButtonBase size=\"1.5em\" mdxType=\"ButtonBase\">with em</ButtonBase>\n    <ButtonBase size=\"2vw\" mdxType=\"ButtonBase\">with vw</ButtonBase>\n    <ButtonBase size=\"30%\" mdxType=\"ButtonBase\">with %</ButtonBase>\n    <ButtonBase size=\"40\" mdxType=\"ButtonBase\">illegal</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"自定义尺寸\"\n    }}>{`自定义尺寸`}</h2>\n    <p>{`size也可以设置为包含可选的 fontSize 属性和互斥的 padding -- width, height属性的对象`}</p>\n    <p>{`属性的值也得是合法的单位，否则将置为默认大小。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`interface size {\n    fontSize?: number,\n    padding: [number | string, number | string]\n}\ninterface size {\n    fontSize?: number,\n    width: number | string,\n    height: number | string\n}\n`}</code></pre>\n    <Playground __position={6} __code={'<ButtonBase size={{ padding: [12, \\'36px\\'] }}>\\n  自定义Padding不会超出边距\\n</ButtonBase>\\n<ButtonBase size={{ fontSize: 16, width: \\'235px\\', height: 60 }}>\\n  自定义width,height可能会超出边距\\n</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase size={{\n        padding: [12, \"36px\"]\n      }} mdxType=\"ButtonBase\">\n        自定义Padding不会超出边距\n    </ButtonBase>\n    <ButtonBase size={{\n        fontSize: 16,\n        width: \"235px\",\n        height: 60\n      }} mdxType=\"ButtonBase\">\n        自定义width,height可能会超出边距\n    </ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"占满父元素\"\n    }}>{`占满父元素`}</h2>\n    <p>{`通过设置 fullWidth 属性为 true 使按钮宽度占满父元素， 比上述改变宽度的方式优先级更高。`}</p>\n    <Playground __position={8} __code={'<ButtonBase variant=\\\"outlined\\\" fullWidth>\\n  fullWidth\\n</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase variant=\"outlined\" fullWidth mdxType=\"ButtonBase\">fullWidth</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"自适应颜色\"\n    }}>{`自适应颜色`}</h2>\n    <p>{`通过设置 color 为任意\"合法的css值\"改变按钮的颜色。`}</p>\n    <p>{`color 值不合法以及默认将置为黑色。`}</p>\n    <p>{`不同类型的按钮有不同的含义：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`text、outlined型的按钮代表文字、边框的颜色以及交互效果色。`}</li>\n      <li parentName=\"ul\">{`contained类型的按钮代表背景及交互效果色，文字的颜色会自适应为黑色或者白色。`}</li>\n    </ul>\n    <Playground __position={10} __code={'<ButtonBase variant=\\\"text\\\" color=\\\"rgb(220, 0, 78)\\\">\\n  text\\n</ButtonBase>\\n<ButtonBase variant=\\\"outlined\\\" color=\\\"rgb(220, 0, 78)\\\">\\n  outlined\\n</ButtonBase>\\n<ButtonBase variant=\\\"contained\\\" color=\\\"rgb(220, 0, 78)\\\">\\n  contained\\n</ButtonBase>\\n<ButtonBase variant=\\\"contained\\\" color=\\\"#e0e0e0\\\">\\n  contained\\n</ButtonBase>\\n<ButtonBase variant=\\\"contained\\\" color=\\\"#1976d2\\\">\\n  contained\\n</ButtonBase>\\n<ButtonBase variant=\\\"contained\\\" color=\\\"pink\\\">\\n  contained\\n</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase variant=\"text\" color=\"rgb(220, 0, 78)\" mdxType=\"ButtonBase\">text</ButtonBase>\n    <ButtonBase variant=\"outlined\" color=\"rgb(220, 0, 78)\" mdxType=\"ButtonBase\">outlined</ButtonBase>\n    <ButtonBase variant=\"contained\" color=\"rgb(220, 0, 78)\" mdxType=\"ButtonBase\">contained</ButtonBase>\n    <ButtonBase variant=\"contained\" color=\"#e0e0e0\" mdxType=\"ButtonBase\">contained</ButtonBase>\n    <ButtonBase variant=\"contained\" color=\"#1976d2\" mdxType=\"ButtonBase\">contained</ButtonBase>\n    <ButtonBase variant=\"contained\" color=\"pink\" mdxType=\"ButtonBase\">contained</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"自定义颜色\"\n    }}>{`自定义颜色`}</h2>\n    <p>{`color也可以设置为包含必选的 color 属性和可选的 bgColor, borderColor, hoverColor, hoverBgColor, hoverBorderColor 属性的对象。`}</p>\n    <p>{`对象中color属性单独出现时等效为直接给组件的color属性赋予该值。如果配合其他恰当的属性，则表示为文字颜色。`}</p>\n    <p>{`属性的值也得是合法的单位，否则将置为默认值。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`interface Color {\n    color: string,\n    bgColor?: string,\n    borderColor?: string,\n    hoverColor?: string,\n    hoverBgColor?: string,\n    hoverBorderColor?: string,\n}\n`}</code></pre>\n    <Playground __position={12} __code={'<ButtonBase variant=\\\"outlined\\\" color={{ color: \\'rgb(220, 0, 78)\\' }}>\\n  contained\\n</ButtonBase>\\n<ButtonBase\\n  variant=\\\"outlined\\\"\\n  color={{ color: \\'rgb(220, 0, 78)\\', borderColor: \\'blue\\' }}\\n>\\n  contained\\n</ButtonBase>\\n<ButtonBase variant=\\\"contained\\\" color={{ color: \\'yellow\\' }}>\\n  contained\\n</ButtonBase>\\n<ButtonBase variant=\\\"contained\\\" color={{ color: \\'yellow\\', bgColor: \\'red\\' }}>\\n  contained\\n</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase variant=\"outlined\" color={{\n        color: \"rgb(220, 0, 78)\"\n      }} mdxType=\"ButtonBase\">contained</ButtonBase>\n    <ButtonBase variant=\"outlined\" color={{\n        color: \"rgb(220, 0, 78)\",\n        borderColor: \"blue\"\n      }} mdxType=\"ButtonBase\">contained</ButtonBase>\n    <ButtonBase variant=\"contained\" color={{\n        color: \"yellow\"\n      }} mdxType=\"ButtonBase\">contained</ButtonBase>\n    <ButtonBase variant=\"contained\" color={{\n        color: \"yellow\",\n        bgColor: \"red\"\n      }} mdxType=\"ButtonBase\">contained</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"边角边框与阴影\"\n    }}>{`边角、边框与阴影`}</h2>\n    <p>{`可以通过设置 boxShadow 为 true、合法的阴影字符串值 / false 来启用/关闭阴影。默认情况下只有 contained 类型的按钮开启阴影。`}</p>\n    <p>{`可以通过设置 borderRadius 为 true、\"circle\" 、合法的css长度单位 / false 来启用/关闭边角，默认为 true。`}</p>\n    <p>{`可以通过设置 borderWidth 为 合法的css长度单位来改变边框宽度。`}</p>\n    <ul>\n      <li parentName=\"ul\">{`只有outlined类型的按钮默认有效`}</li>\n      <li parentName=\"ul\">{`text和contained类型的按钮是默认没有边框的`}</li>\n      <li parentName=\"ul\">{`它们只有当通过color指定了borderColor和hoverBorderColor的情况下才会生效。`}</li>\n    </ul>\n    <p>{`可以通过设置 borderStyle 改变边框样式。`}</p>\n    <Playground __position={14} __code={'<ButtonBase variant=\\\"contained\\\" color=\\\"#4caf50\\\" borderRadius={false}>\\n  borderRadius=false\\n</ButtonBase>\\n<ButtonBase\\n  variant=\\\"outlined\\\"\\n  boxShadow\\n  borderWidth=\\\"2px\\\"\\n  borderStyle=\\\"dashed\\\"\\n>\\n  boxShadow=true\\n</ButtonBase>\\n<ButtonBase\\n  variant=\\\"contained\\\"\\n  color=\\\"#4caf50\\\"\\n  boxShadow={false}\\n  borderRadius=\\\"circle\\\"\\n  size={{ width: 100, height: 100 }}\\n>\\n  no shadow\\n</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase variant=\"contained\" color=\"#4caf50\" borderRadius={false} mdxType=\"ButtonBase\">borderRadius=false</ButtonBase>\n    <ButtonBase variant=\"outlined\" boxShadow borderWidth=\"2px\" borderStyle=\"dashed\" mdxType=\"ButtonBase\">boxShadow=true</ButtonBase>\n    <ButtonBase variant=\"contained\" color=\"#4caf50\" boxShadow={false} borderRadius=\"circle\" size={{\n        width: 100,\n        height: 100\n      }} mdxType=\"ButtonBase\">no shadow</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"class和内联style\"\n    }}>{`class和内联style`}</h2>\n    <p>{`以上的属性足以构建大部分情况下一个按钮应该有的样子。`}</p>\n    <p>{`如果这还不能满足你，并且你需要ButtonBase的一些内置效果，那也支持通过class和内联style直接修改样式。`}</p>\n    <Playground __position={16} __code={'<ButtonBase variant=\\\"contained\\\" className=\\\"xxx\\\" style={{ color: \\'red\\' }}>\\n  custom\\n</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase variant=\"contained\" className=\"xxx\" style={{\n        color: \"red\"\n      }} mdxType=\"ButtonBase\">custom</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"禁用状态\"\n    }}>{`禁用状态`}</h2>\n    <p>{`可以通过设置 disabled 为 true 禁用按钮。`}</p>\n    <Playground __position={18} __code={'<ButtonBase variant=\\\"text\\\" disabled>\\n  text\\n</ButtonBase>\\n<ButtonBase variant=\\\"outlined\\\" disabled>\\n  outlined\\n</ButtonBase>\\n<ButtonBase variant=\\\"contained\\\" color=\\\"rgb(220, 0, 78)\\\" disabled>\\n  contained\\n</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase variant=\"text\" disabled mdxType=\"ButtonBase\">text</ButtonBase>\n    <ButtonBase variant=\"outlined\" disabled mdxType=\"ButtonBase\">outlined</ButtonBase>\n    <ButtonBase variant=\"contained\" color=\"rgb(220, 0, 78)\" disabled mdxType=\"ButtonBase\">contained</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"自定义渲染html元素\"\n    }}>{`自定义渲染html元素`}</h2>\n    <p>{`可以通过设置 as 指定渲染成什么html元素，不填默认为 button。`}</p>\n    <Playground __position={20} __code={'<ButtonBase as=\\\"a\\\" href=\\\"https://www.baidu.com\\\" target=\\\"_blank\\\">\\n  a\\n</ButtonBase>\\n<ButtonBase as=\\\"span\\\">span</ButtonBase>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      ButtonBase,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <ButtonBase as=\"a\" href=\"https://www.baidu.com\" target=\"_blank\" mdxType=\"ButtonBase\">a</ButtonBase>\n    <ButtonBase as=\"span\" mdxType=\"ButtonBase\">span</ButtonBase>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"其他任意原生html属性事件\"\n    }}>{`其他任意原生html属性、事件`}</h2>\n    <br />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`variant`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`按钮类型`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"text\" `}{`|`}{` \"outlined\" `}{`|`}{`\"contained\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"outlined\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`按钮尺寸`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"large\" `}{`|`}{` \"big\" `}{`|`}{` \"normal\" `}{`|`}{` \"small\" `}{`|`}{` \"合法的css长度字符串\" `}{`|`}{` number `}{`|`}{` custom-size(详情见上)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"normal\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`color`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`按钮颜色`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"合法的css颜色字符串\" `}{`|`}{` { color, bgColor, borderColor, hoverColor, hoverBgColor, hoverBorderColor }`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"#000\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boxShadow`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`按钮阴影`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean `}{`|`}{` \"合法的css阴影字符串\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"text\", \"outlined\" 类型按钮默认false, \"contained\" 类型按钮默认true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`borderRadius`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`按钮阴影`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean `}{`|`}{` \"circle\" `}{`|`}{` \"合法的css长度字符串\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`borderWidth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`按钮边框`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"合法的css长度字符串\" `}{`|`}{` number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"text\", \"contained\" 类型按钮默认0, \"outlined\" 类型按钮默认 \"1px\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`borderStyle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`边框样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"合法的css边框样式字符串\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"solid\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`禁用状态`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`其他`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`html属性`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`如 class, style, onClick 等`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
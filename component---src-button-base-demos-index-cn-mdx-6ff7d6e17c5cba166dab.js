(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{u5D2:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return u})),n.d(e,"default",(function(){return B}));var a=n("k0FJ"),o=n("oedh"),l=(n("mXGw"),n("/FXl")),r=n("TjRS"),b=n("ZFoC"),c=n("Y/WV"),i=(n("aD51"),["components"]),u={};void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/ButtonBase/demos/index.cn.mdx"}});var d={_frontmatter:u},s=r.a;function B(t){var e,n,B,p,m,j,O,g,y,h,x,_=t.components,f=Object(o.a)(t,i);return Object(l.b)(s,Object(a.a)({},d,f,{components:_,mdxType:"MDXLayout"}),Object(l.b)("h4",{id:"简介"},"简介"),Object(l.b)("p",null,"轻量的，只包含基础样式的按钮组件。"),Object(l.b)("h2",{id:"类型"},"类型"),Object(l.b)("p",null,'通过设置 variant 为 "text", "outlined", "contained" 改变按钮的类型。若不设置 variant，则类型默认为 "outlined"。'),Object(l.b)(b.c,{__position:0,__code:'<ButtonBase variant="text">text</ButtonBase>\n<ButtonBase variant="outlined">outlined</ButtonBase>\n<ButtonBase variant="contained">contained</ButtonBase>',__scope:(e={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},e.DefaultLayout=r.a,e._frontmatter=u,e),mdxType:"Playground"},Object(l.b)(c.a,{variant:"text",mdxType:"ButtonBase"},"text"),Object(l.b)(c.a,{variant:"outlined",mdxType:"ButtonBase"},"outlined"),Object(l.b)(c.a,{variant:"contained",mdxType:"ButtonBase"},"contained")),Object(l.b)("br",null),Object(l.b)("h2",{id:"可选尺寸"},"可选尺寸"),Object(l.b)("p",null,'通过设置 size 为 "large" , "small" , "normal" , "small" 分别把按钮设为四种不同尺寸。若不设置 size，则尺寸默认为 "normal"。'),Object(l.b)(b.c,{__position:2,__code:'<ButtonBase size="large">large</ButtonBase>\n<ButtonBase size="big">big</ButtonBase>\n<ButtonBase size="normal">默认为normal</ButtonBase>\n<ButtonBase size="small">small</ButtonBase>',__scope:(n={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},n.DefaultLayout=r.a,n._frontmatter=u,n),mdxType:"Playground"},Object(l.b)(c.a,{size:"large",mdxType:"ButtonBase"},"large"),Object(l.b)(c.a,{size:"big",mdxType:"ButtonBase"},"big"),Object(l.b)(c.a,{size:"normal",mdxType:"ButtonBase"},"默认为normal"),Object(l.b)(c.a,{size:"small",mdxType:"ButtonBase"},"small")),Object(l.b)("br",null),Object(l.b)("h2",{id:"自适应尺寸"},"自适应尺寸"),Object(l.b)("p",null,'通过设置 size 为"合法的css长度单位"指定按钮内的字体大小，按钮的边界也会根据size自适应。'),Object(l.b)("p",null,"如果 size 非法，将会被设置为默认大小。"),Object(l.b)(b.c,{__position:4,__code:'<ButtonBase size={20}>number</ButtonBase>\n<ButtonBase size="24px">with px</ButtonBase>\n<ButtonBase size="1.5em">with em</ButtonBase>\n<ButtonBase size="2vw">with vw</ButtonBase>\n<ButtonBase size="30%">with %</ButtonBase>\n<ButtonBase size="40">illegal</ButtonBase>',__scope:(B={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},B.DefaultLayout=r.a,B._frontmatter=u,B),mdxType:"Playground"},Object(l.b)(c.a,{size:20,mdxType:"ButtonBase"},"number"),Object(l.b)(c.a,{size:"24px",mdxType:"ButtonBase"},"with px"),Object(l.b)(c.a,{size:"1.5em",mdxType:"ButtonBase"},"with em"),Object(l.b)(c.a,{size:"2vw",mdxType:"ButtonBase"},"with vw"),Object(l.b)(c.a,{size:"30%",mdxType:"ButtonBase"},"with %"),Object(l.b)(c.a,{size:"40",mdxType:"ButtonBase"},"illegal")),Object(l.b)("br",null),Object(l.b)("h2",{id:"自定义尺寸"},"自定义尺寸"),Object(l.b)("p",null,"size也可以设置为包含可选的 fontSize 属性和互斥的 padding -- width, height属性的对象"),Object(l.b)("p",null,"属性的值也得是合法的单位，否则将置为默认大小。"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-javascript"},"interface size {\n    fontSize?: number,\n    padding: [number | string, number | string]\n}\ninterface size {\n    fontSize?: number,\n    width: number | string,\n    height: number | string\n}\n")),Object(l.b)(b.c,{__position:6,__code:"<ButtonBase size={{ padding: [12, '36px'] }}>\n  自定义Padding不会超出边距\n</ButtonBase>\n<ButtonBase size={{ fontSize: 16, width: '235px', height: 60 }}>\n  自定义width,height可能会超出边距\n</ButtonBase>",__scope:(p={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},p.DefaultLayout=r.a,p._frontmatter=u,p),mdxType:"Playground"},Object(l.b)(c.a,{size:{padding:[12,"36px"]},mdxType:"ButtonBase"},"自定义Padding不会超出边距"),Object(l.b)(c.a,{size:{fontSize:16,width:"235px",height:60},mdxType:"ButtonBase"},"自定义width,height可能会超出边距")),Object(l.b)("br",null),Object(l.b)("h2",{id:"占满父元素"},"占满父元素"),Object(l.b)("p",null,"通过设置 fullWidth 属性为 true 使按钮宽度占满父元素， 比上述改变宽度的方式优先级更高。"),Object(l.b)(b.c,{__position:8,__code:'<ButtonBase variant="outlined" fullWidth>\n  fullWidth\n</ButtonBase>',__scope:(m={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},m.DefaultLayout=r.a,m._frontmatter=u,m),mdxType:"Playground"},Object(l.b)(c.a,{variant:"outlined",fullWidth:!0,mdxType:"ButtonBase"},"fullWidth")),Object(l.b)("br",null),Object(l.b)("h2",{id:"自适应颜色"},"自适应颜色"),Object(l.b)("p",null,'通过设置 color 为任意"合法的css值"改变按钮的颜色。'),Object(l.b)("p",null,"color 值不合法以及默认将置为黑色。"),Object(l.b)("p",null,"不同类型的按钮有不同的含义："),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"text、outlined型的按钮代表文字、边框的颜色以及交互效果色。"),Object(l.b)("li",{parentName:"ul"},"contained类型的按钮代表背景及交互效果色，文字的颜色会自适应为黑色或者白色。")),Object(l.b)(b.c,{__position:10,__code:'<ButtonBase variant="text" color="rgb(220, 0, 78)">\n  text\n</ButtonBase>\n<ButtonBase variant="outlined" color="rgb(220, 0, 78)">\n  outlined\n</ButtonBase>\n<ButtonBase variant="contained" color="rgb(220, 0, 78)">\n  contained\n</ButtonBase>\n<ButtonBase variant="contained" color="#e0e0e0">\n  contained\n</ButtonBase>\n<ButtonBase variant="contained" color="#1976d2">\n  contained\n</ButtonBase>\n<ButtonBase variant="contained" color="pink">\n  contained\n</ButtonBase>',__scope:(j={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},j.DefaultLayout=r.a,j._frontmatter=u,j),mdxType:"Playground"},Object(l.b)(c.a,{variant:"text",color:"rgb(220, 0, 78)",mdxType:"ButtonBase"},"text"),Object(l.b)(c.a,{variant:"outlined",color:"rgb(220, 0, 78)",mdxType:"ButtonBase"},"outlined"),Object(l.b)(c.a,{variant:"contained",color:"rgb(220, 0, 78)",mdxType:"ButtonBase"},"contained"),Object(l.b)(c.a,{variant:"contained",color:"#e0e0e0",mdxType:"ButtonBase"},"contained"),Object(l.b)(c.a,{variant:"contained",color:"#1976d2",mdxType:"ButtonBase"},"contained"),Object(l.b)(c.a,{variant:"contained",color:"pink",mdxType:"ButtonBase"},"contained")),Object(l.b)("br",null),Object(l.b)("h2",{id:"自定义颜色"},"自定义颜色"),Object(l.b)("p",null,"color也可以设置为包含必选的 color 属性和可选的 bgColor, borderColor, hoverColor, hoverBgColor, hoverBorderColor 属性的对象。"),Object(l.b)("p",null,"对象中color属性单独出现时等效为直接给组件的color属性赋予该值。如果配合其他恰当的属性，则表示为文字颜色。"),Object(l.b)("p",null,"属性的值也得是合法的单位，否则将置为默认值。"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-javascript"},"interface Color {\n    color: string,\n    bgColor?: string,\n    borderColor?: string,\n    hoverColor?: string,\n    hoverBgColor?: string,\n    hoverBorderColor?: string,\n}\n")),Object(l.b)(b.c,{__position:12,__code:"<ButtonBase variant=\"outlined\" color={{ color: 'rgb(220, 0, 78)' }}>\n  contained\n</ButtonBase>\n<ButtonBase\n  variant=\"outlined\"\n  color={{ color: 'rgb(220, 0, 78)', borderColor: 'blue' }}\n>\n  contained\n</ButtonBase>\n<ButtonBase variant=\"contained\" color={{ color: 'yellow' }}>\n  contained\n</ButtonBase>\n<ButtonBase variant=\"contained\" color={{ color: 'yellow', bgColor: 'red' }}>\n  contained\n</ButtonBase>",__scope:(O={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},O.DefaultLayout=r.a,O._frontmatter=u,O),mdxType:"Playground"},Object(l.b)(c.a,{variant:"outlined",color:{color:"rgb(220, 0, 78)"},mdxType:"ButtonBase"},"contained"),Object(l.b)(c.a,{variant:"outlined",color:{color:"rgb(220, 0, 78)",borderColor:"blue"},mdxType:"ButtonBase"},"contained"),Object(l.b)(c.a,{variant:"contained",color:{color:"yellow"},mdxType:"ButtonBase"},"contained"),Object(l.b)(c.a,{variant:"contained",color:{color:"yellow",bgColor:"red"},mdxType:"ButtonBase"},"contained")),Object(l.b)("br",null),Object(l.b)("h2",{id:"边角边框与阴影"},"边角、边框与阴影"),Object(l.b)("p",null,"可以通过设置 boxShadow 为 true、合法的阴影字符串值 / false 来启用/关闭阴影。默认情况下只有 contained 类型的按钮开启阴影。"),Object(l.b)("p",null,'可以通过设置 borderRadius 为 true、"circle" 、合法的css长度单位 / false 来启用/关闭边角，默认为 true。'),Object(l.b)("p",null,"可以通过设置 borderWidth 为 合法的css长度单位来改变边框宽度。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"只有outlined类型的按钮默认有效"),Object(l.b)("li",{parentName:"ul"},"text和contained类型的按钮是默认没有边框的"),Object(l.b)("li",{parentName:"ul"},"它们只有当通过color指定了borderColor和hoverBorderColor的情况下才会生效。")),Object(l.b)("p",null,"可以通过设置 borderStyle 改变边框样式。"),Object(l.b)(b.c,{__position:14,__code:'<ButtonBase variant="contained" color="#4caf50" borderRadius={false}>\n  borderRadius=false\n</ButtonBase>\n<ButtonBase\n  variant="outlined"\n  boxShadow\n  borderWidth="2px"\n  borderStyle="dashed"\n>\n  boxShadow=true\n</ButtonBase>\n<ButtonBase\n  variant="contained"\n  color="#4caf50"\n  boxShadow={false}\n  borderRadius="circle"\n  size={{ width: 100, height: 100 }}\n>\n  no shadow\n</ButtonBase>',__scope:(g={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},g.DefaultLayout=r.a,g._frontmatter=u,g),mdxType:"Playground"},Object(l.b)(c.a,{variant:"contained",color:"#4caf50",borderRadius:!1,mdxType:"ButtonBase"},"borderRadius=false"),Object(l.b)(c.a,{variant:"outlined",boxShadow:!0,borderWidth:"2px",borderStyle:"dashed",mdxType:"ButtonBase"},"boxShadow=true"),Object(l.b)(c.a,{variant:"contained",color:"#4caf50",boxShadow:!1,borderRadius:"circle",size:{width:100,height:100},mdxType:"ButtonBase"},"no shadow")),Object(l.b)("br",null),Object(l.b)("h2",{id:"class和内联style"},"class和内联style"),Object(l.b)("p",null,"以上的属性足以构建大部分情况下一个按钮应该有的样子。"),Object(l.b)("p",null,"如果这还不能满足你，并且你需要ButtonBase的一些内置效果，那也支持通过class和内联style直接修改样式。"),Object(l.b)(b.c,{__position:16,__code:'<ButtonBase variant="contained" className="xxx" style={{ color: \'red\' }}>\n  custom\n</ButtonBase>',__scope:(y={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},y.DefaultLayout=r.a,y._frontmatter=u,y),mdxType:"Playground"},Object(l.b)(c.a,{variant:"contained",className:"xxx",style:{color:"red"},mdxType:"ButtonBase"},"custom")),Object(l.b)("br",null),Object(l.b)("h2",{id:"禁用状态"},"禁用状态"),Object(l.b)("p",null,"可以通过设置 disabled 为 true 禁用按钮。"),Object(l.b)(b.c,{__position:18,__code:'<ButtonBase variant="text" disabled>\n  text\n</ButtonBase>\n<ButtonBase variant="outlined" disabled>\n  outlined\n</ButtonBase>\n<ButtonBase variant="contained" color="rgb(220, 0, 78)" disabled>\n  contained\n</ButtonBase>',__scope:(h={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},h.DefaultLayout=r.a,h._frontmatter=u,h),mdxType:"Playground"},Object(l.b)(c.a,{variant:"text",disabled:!0,mdxType:"ButtonBase"},"text"),Object(l.b)(c.a,{variant:"outlined",disabled:!0,mdxType:"ButtonBase"},"outlined"),Object(l.b)(c.a,{variant:"contained",color:"rgb(220, 0, 78)",disabled:!0,mdxType:"ButtonBase"},"contained")),Object(l.b)("br",null),Object(l.b)("h2",{id:"自定义渲染html元素"},"自定义渲染html元素"),Object(l.b)("p",null,"可以通过设置 as 指定渲染成什么html元素，不填默认为 button。"),Object(l.b)(b.c,{__position:20,__code:'<ButtonBase as="a" href="https://www.baidu.com" target="_blank">\n  a\n</ButtonBase>\n<ButtonBase as="span">span</ButtonBase>',__scope:(x={props:f,DefaultLayout:r.a,Playground:b.c,ButtonBase:c.a},x.DefaultLayout=r.a,x._frontmatter=u,x),mdxType:"Playground"},Object(l.b)(c.a,{as:"a",href:"https://www.baidu.com",target:"_blank",mdxType:"ButtonBase"},"a"),Object(l.b)(c.a,{as:"span",mdxType:"ButtonBase"},"span")),Object(l.b)("br",null),Object(l.b)("h2",{id:"其他任意原生html属性事件"},"其他任意原生html属性、事件"),Object(l.b)("br",null),Object(l.b)("h2",{id:"api"},"API"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"属性"),Object(l.b)("th",{parentName:"tr",align:null},"说明"),Object(l.b)("th",{parentName:"tr",align:null},"类型"),Object(l.b)("th",{parentName:"tr",align:null},"默认值"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"variant"),Object(l.b)("td",{parentName:"tr",align:null},"按钮类型"),Object(l.b)("td",{parentName:"tr",align:null},'"text" ',"|",' "outlined" ',"|",'"contained"'),Object(l.b)("td",{parentName:"tr",align:null},'"outlined"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"size"),Object(l.b)("td",{parentName:"tr",align:null},"按钮尺寸"),Object(l.b)("td",{parentName:"tr",align:null},'"large" ',"|",' "big" ',"|",' "normal" ',"|",' "small" ',"|",' "合法的css长度字符串" ',"|"," number ","|"," custom-size(详情见上)"),Object(l.b)("td",{parentName:"tr",align:null},'"normal"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"color"),Object(l.b)("td",{parentName:"tr",align:null},"按钮颜色"),Object(l.b)("td",{parentName:"tr",align:null},'"合法的css颜色字符串" ',"|"," { color, bgColor, borderColor, hoverColor, hoverBgColor, hoverBorderColor }"),Object(l.b)("td",{parentName:"tr",align:null},'"#000"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"boxShadow"),Object(l.b)("td",{parentName:"tr",align:null},"按钮阴影"),Object(l.b)("td",{parentName:"tr",align:null},"boolean ","|",' "合法的css阴影字符串"'),Object(l.b)("td",{parentName:"tr",align:null},'"text", "outlined" 类型按钮默认false, "contained" 类型按钮默认true')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"borderRadius"),Object(l.b)("td",{parentName:"tr",align:null},"按钮阴影"),Object(l.b)("td",{parentName:"tr",align:null},"boolean ","|",' "circle" ',"|",' "合法的css长度字符串"'),Object(l.b)("td",{parentName:"tr",align:null},"true")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"borderWidth"),Object(l.b)("td",{parentName:"tr",align:null},"按钮边框"),Object(l.b)("td",{parentName:"tr",align:null},'"合法的css长度字符串" ',"|"," number"),Object(l.b)("td",{parentName:"tr",align:null},'"text", "contained" 类型按钮默认0, "outlined" 类型按钮默认 "1px"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"borderStyle"),Object(l.b)("td",{parentName:"tr",align:null},"边框样式"),Object(l.b)("td",{parentName:"tr",align:null},'"合法的css边框样式字符串"'),Object(l.b)("td",{parentName:"tr",align:null},'"solid"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"disabled"),Object(l.b)("td",{parentName:"tr",align:null},"禁用状态"),Object(l.b)("td",{parentName:"tr",align:null},"boolean"),Object(l.b)("td",{parentName:"tr",align:null},"false")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"其他"),Object(l.b)("td",{parentName:"tr",align:null},"html属性"),Object(l.b)("td",{parentName:"tr",align:null},"如 class, style, onClick 等"),Object(l.b)("td",{parentName:"tr",align:null})))))}void 0!==B&&B&&B===Object(B)&&Object.isExtensible(B)&&!B.hasOwnProperty("__filemeta")&&Object.defineProperty(B,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/ButtonBase/demos/index.cn.mdx"}}),B.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-button-base-demos-index-cn-mdx-6ff7d6e17c5cba166dab.js.map
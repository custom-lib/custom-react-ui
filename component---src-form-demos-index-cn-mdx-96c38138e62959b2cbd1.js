(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"x5+g":function(e,r,n){"use strict";n.r(r),n.d(r,"_frontmatter",(function(){return d})),n.d(r,"default",(function(){return g}));var t=n("k0FJ"),a=n("oedh"),o=(n("mXGw"),n("/FXl")),u=n("TjRS"),m=n("ZFoC"),s=n("5yYB"),l=n("pl+z"),i=n("/t70"),p=n("rxZx"),b=n("7bhT"),c=(n("aD51"),["components"]),d={};void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Form/demos/index.cn.mdx"}});var x={_frontmatter:d},h=u.a;function g(e){var r,n,g=e.components,f=Object(a.a)(e,c);return Object(o.b)(h,Object(t.a)({},x,f,{components:g,mdxType:"MDXLayout"}),Object(o.b)("h4",{id:"简介"},"简介"),Object(o.b)("p",null,"零侵入性的表单。"),Object(o.b)("p",null,"对react-hook-form的进一步封装，也支持react-hook-form API的使用。"),Object(o.b)("h2",{id:"基础用法"},"基础用法"),Object(o.b)("p",null,"Form组件会绑定其内写明了 name 属性的 custom-ui库中的表单组件。"),Object(o.b)("p",null,"在提交表单前，根据表单组件的 rules属性 做次校验。"),Object(o.b)("p",null,"rules属性要求包含两个键值对的对象数组，键值对中的其中一个键必须是helperText用于错误提示，另一个是html原生的校验规则(required, pattern, min, max, minLength, maxLength)。"),Object(o.b)("p",null,"通过校验才会触发Form的onSubmit, onSubmit回调函数中的第一个参数是Form内表单组件的数据集合对象，键为表单组件的name属性，值为表单组件的值。"),Object(o.b)(m.c,{__position:0,__code:'<Form onSubmit={data => console.log(data)}>\n  <Input\n    name="user"\n    label="Input user"\n    rules={[{ required: true, helperText: \'UserName is required.\' }]}\n  />\n  <Input\n    name="sex"\n    variant="outlined"\n    label="input sex"\n    rules={[{ maxLength: 3, helperText: \'MaxLength is 3.\' }]}\n  />\n  <Input\n    name="age"\n    label="input age"\n    rules={[\n      { required: true, helperText: \'Age is required.\' },\n      { pattern: /\\d+/, helperText: \'Age must be number\' },\n    ]}\n  />\n  <Input\n    name="password"\n    label="Input Password"\n    rules={[{ required: true, helperText: \'Password is required.\' }]}\n    style={{ marginBottom: 40 }}\n  />\n  <Checkbox\n    name="agree"\n    rules={[\n      {\n        required: true,\n        helperText: \'You must agree toTerms of UseandPrivacy Policy\',\n      },\n    ]}\n  >\n    同意协议\n  </Checkbox>\n  <Checkbox name="remember-account">记住账号</Checkbox>\n  <Button type="submit" style={{ display: \'block\', marginTop: 24 }}>\n    提交\n  </Button>\n</Form>',__scope:(r={props:f,DefaultLayout:u.a,Playground:m.c,Form:s.a,Input:l.a,Checkbox:i.a,Button:p.a,Demo:b.a},r.DefaultLayout=u.a,r._frontmatter=d,r),mdxType:"Playground"},Object(o.b)(s.a,{onSubmit:function(e){return console.log(e)},mdxType:"Form"},Object(o.b)(l.a,{name:"user",label:"Input user",rules:[{required:!0,helperText:"UserName is required."}],mdxType:"Input"}),Object(o.b)(l.a,{name:"sex",variant:"outlined",label:"input sex",rules:[{maxLength:3,helperText:"MaxLength is 3."}],mdxType:"Input"}),Object(o.b)(l.a,{name:"age",label:"input age",rules:[{required:!0,helperText:"Age is required."},{pattern:/\d+/,helperText:"Age must be number"}],mdxType:"Input"}),Object(o.b)(l.a,{name:"password",label:"Input Password",rules:[{required:!0,helperText:"Password is required."}],style:{marginBottom:40},mdxType:"Input"}),Object(o.b)(i.a,{name:"agree",rules:[{required:!0,helperText:"You must agree toTerms of UseandPrivacy Policy"}],mdxType:"Checkbox"},"同意协议"),Object(o.b)(i.a,{name:"remember-account",mdxType:"Checkbox"},"记住账号"),Object(o.b)(p.a,{type:"submit",style:{display:"block",marginTop:24},mdxType:"Button"},"提交"))),Object(o.b)("br",null),Object(o.b)("h2",{id:"使用react-hook-form的进阶功能"},"使用react-hook-form的进阶功能"),Object(o.b)("p",null,"Form导出了react-hook-form的全部API, 使用详情",Object(o.b)("a",{parentName:"p",href:"https://react-hook-form.com/get-started"},"请看"),"。"),Object(o.b)("p",null,"需要使用 useForm 获取所有方法， 通过 FormProvider 注入给 Form。"),Object(o.b)("p",null,"之后可以像上一步的例子一样使用custom-ui里提供的表单组件的内置rules属性， 并支持watch等高级用法。"),Object(o.b)("p",null,"也可以通过 register 方法 自行注册任意的表单组件。"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},'import React from \'react\';\nimport Form, { useForm, FormProvider } from \'../index\';\nimport Input from "../../Input/demo/StyledInput";\nimport Checkbox from "../../Checkbox";\nimport Button from "../../Button";\n\nconst Demo = () => {\n    const methods = useForm(); // initialise the hook\n    const { register, errors, watch } = methods;\n    \n    return (\n        <FormProvider {...methods}>\n            <Form onSubmit={data => console.log(data)}>\n                <input ref={register({ required: true })} name="user" placeholder="Input user" />\n                {errors.user && <span>User is required.</span>}\n                <Input\n                    name="email"\n                    label="input email"\n                    ref={register({\n                        required: "email is required.",\n                        pattern: {\n                            value: /^(([^<>()[\\]\\\\.,;:\\s@"]+(\\.[^<>()[\\]\\\\.,;:\\s@"]+)*)|(".+"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                            message: \'error email format\'\n                        }\n                    })}\n                    error={errors?.email}\n                    helperText={errors?.email?.message}\n                />\n                <Input name="sex" variant="outlined" label="input sex"  rules={[{ required: true, helperText: \'Sex is required.\' }, { maxLength: 3, helperText: \'MaxLength is 3.\' }]}/>\n                <Input\n                    name="age"\n                    label="input age" \n                    rules={[{ required: true, helperText: \'Age is required.\' }, { pattern: /\\d+/, helperText: \'Age must be number\' }]}\n                />\n                <Input\n                    name="password"\n                    label="Input Password" \n                    rules={[{ required: true, helperText: \'Password is required.\' }]}\n                />\n                <Input\n                    name="password_confirm"\n                    label="Input password again" \n                    rules={[{ validate: (value: string) => value === watch("password"), helperText: \'Password different \' }]}\n                />\n                <Checkbox name="agree" rules={[{ required: true, helperText: \'You must agree toTerms of UseandPrivacy Policy\' }]}>同意协议</Checkbox>\n                <Checkbox name="remember-account">记住账号</Checkbox>\n                <Button type="submit" style={{ display: \'block\', marginTop: 24 }}>\n                    提交\n                </Button>\n            </Form>\n        </FormProvider>\n    );\n}\n')),Object(o.b)(m.c,{__position:2,__code:"<Demo />",__scope:(n={props:f,DefaultLayout:u.a,Playground:m.c,Form:s.a,Input:l.a,Checkbox:i.a,Button:p.a,Demo:b.a},n.DefaultLayout=u.a,n._frontmatter=d,n),mdxType:"Playground"},Object(o.b)(b.a,{mdxType:"Demo"})))}void 0!==g&&g&&g===Object(g)&&Object.isExtensible(g)&&!g.hasOwnProperty("__filemeta")&&Object.defineProperty(g,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Form/demos/index.cn.mdx"}}),g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-form-demos-index-cn-mdx-96c38138e62959b2cbd1.js.map
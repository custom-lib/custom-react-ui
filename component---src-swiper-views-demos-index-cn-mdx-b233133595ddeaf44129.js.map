{"version":3,"sources":["webpack:///../src/SwiperViews/demos/index.cn.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","SwiperViews","BasicDemo","isMDXComponent"],"mappings":"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","file":"component---src-swiper-views-demos-index-cn-mdx-b233133595ddeaf44129.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Codes/custom-ui-old/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport SwiperViews from \"../index\";\nimport BasicDemo from './basic';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h4 {...{\n      \"id\": \"简介\"\n    }}>{`简介`}</h4>\n    <p>{`既是可滑动视图，也可以作为轮播图(走马灯)。`}</p>\n    <p>{`具备帧延缓拖拽跟随动画。`}</p>\n    <h2 {...{\n      \"id\": \"用法示例\"\n    }}>{`用法示例`}</h2>\n    <p>{`注意必须指明SwiperViews的宽高。可以通过 className, style 设置。`}</p>\n    <p>{`作为视图的子元素View将占满SwiperViews的宽高，不可手动设置View的宽高。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport SwiperViews, { Methods } from '../index';\nconst views = [{ bgColor: 'red '}, { bgColor: 'blue'}, { bgColor: 'green' }, { bgColor: 'yellow'}]\nconst View = styled.div\\`\n\\`;\nconst Demo = () => {\n    const swiper = useRef<Methods>(null);\n    const [direction, setDirection] = useState<'row' | 'column'>('row');\n    const [size, setSize] = useState(1);\n    const [scaleInDrag, setScaleInDrag] = useState<boolean | 'noShadow'>(true);\n    const [enableDrag, setEnableDrag] = useState(true);\n    const [autoplay, setAutoplay] = useState<number | boolean>(false);\n    return (\n        <>\n            <button onClick={() => setDirection(pre => pre === 'row' ? 'column' : 'row')}>改变 direction ({direction})</button>\n            <button onClick={() => setSize(pre => pre === 1 ? .75 : pre === .75 ? .5 : 1)}>改变 size ({size})</button>\n            <button onClick={() => setScaleInDrag(pre => pre === true ? 'noShadow' : pre === 'noShadow' ? false : true)}>改变 拖动时缩放视图 ({String(scaleInDrag)})</button>\n            <button onClick={() => setEnableDrag(pre => !pre)}>改变 允许拖动 ({String(enableDrag)})</button>\n            <button onClick={() => setAutoplay(pre => pre === false ? 3000 : false)}>改变 自动轮播 ({String(autoplay)})</button>\n            <button onClick={() => swiper.current?.goto(0)}> goto 页面0 </button>\n            <button onClick={() => swiper.current?.goto(2)}> goTo 页面2 </button>\n            <button onClick={() => swiper.current?.goto(-1)}> goTo 页面-1 </button>\n            <button onClick={() => swiper.current?.goto(12)}> goTo 页面12 </button>\n            <SwiperViews\n                ref={swiper}\n                style={{ width: 1000, height: 600, maxWidth: '100%', maxHeight: '80%' }}\n                direction={direction}\n                size={size}\n                scaleInDrag={scaleInDrag}\n                enableDrag={enableDrag}\n                autoplay={autoplay}\n            >\n                {views.map((view, index) => <View key={index} style={{ backgroundColor: view.bgColor }}>页面-{index}</View>)}\n            </SwiperViews>\n            <SwiperViews\n                style={{ width: 1000, height: 600, maxWidth: '100%', maxHeight: '80%', marginTop: 100 }}\n                size={.7}\n                loop\n            >\n                {views.map((view, index) => <View key={index} style={{ backgroundColor: view.bgColor }}>首尾相连循环-{index}</View>)}\n            </SwiperViews>\n            <SwiperViews\n                style={{ width: 1000, height: 600, maxWidth: '100%', maxHeight: '80%', marginTop: 100 }}\n                circular\n            >\n                {views.map((view, index) => <View key={index} style={{ backgroundColor: view.bgColor }}>首尾复位循环-{index}</View>)}\n            </SwiperViews>\n        </>\n    );\n}\n`}</code></pre>\n    <Playground __position={0} __code={'<BasicDemo />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      SwiperViews,\n      BasicDemo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <BasicDemo mdxType=\"BasicDemo\" />\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"大小与样式\"\n    }}>{`大小与样式`}</h2>\n    <p>{`可以通过 className, style 属性设置SwiperViews容器的大小与样式。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"方向\"\n    }}>{`方向`}</h2>\n    <p>{`可以通过设置 direction 为 \"row\"(默认) | \"column\" 设置视图排列的方向。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"视图占主轴大小\"\n    }}>{`视图占主轴大小`}</h2>\n    <p>{`可以通过设置 size 为 0.5 - 1(默认) 之间的数字设置视图在主轴方向占容器的大小。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"拖拽时缩放视图\"\n    }}>{`拖拽时缩放视图`}</h2>\n    <p>{`可以通过设置 scaleInDrag 为 true(默认) / \"noShadow\" 开启拖拽时缩放视图， false 关闭。`}</p>\n    <p>{`设置为 true 将为视图View永久附上 box-shadow 效果，\"noShadow\"则不会。当然也可以在视图View上用css覆盖。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"允许禁用拖拽\"\n    }}>{`允许/禁用拖拽`}</h2>\n    <p>{`通过设置 enableDrag 属性为 true(默认) / false 允许/禁用拖拽。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"自动播放\"\n    }}>{`自动播放`}</h2>\n    <p>{`通过设置 autoplay 属性为 true(默认，等效3000) / 大于3000的数值 开启x毫秒后自动播放下一张视图， false(默认) 关闭。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"循环\"\n    }}>{`循环`}</h2>\n    <p>{`通过设置 loop 属性为 true 开启首尾相连的循环。`}</p>\n    <p>{`通过设置 circular 属性为 true 开启首尾复位的循环。`}</p>\n    <p>{`这两个属性互斥，不能同时存在，并且默认不开启。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"主动跳转\"\n    }}>{`主动跳转`}</h2>\n    <p>{`可以通过ref属性调用SwiperViews的goto(index: number)方法，指定跳转到哪一张视图。`}</p>\n    <p>{`若index超出范围， 则按首尾相连的顺序，跳到对应的那个视图。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`direction`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`视图排列方向`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"row\" `}{`|`}{` \"column\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"row\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`视图占主轴大小`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number(0.5 - 1)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`scaleInDrag`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`拖拽时缩放视图`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean `}{`|`}{` \"noShadow\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`enableDrag`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`启用拖拽`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`autoplay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自动播放`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number (> 3000)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loop`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`首尾相连循环`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`circular`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`首尾复位循环`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`其他`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`html属性`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`如 className, style, onClick 等`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
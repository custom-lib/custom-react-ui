{"version":3,"sources":["webpack:///../src/Progress/demos/index.cn.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Progress","React","percent","setPercent","onClick","pre","circular","parentName","size","width","height","borderRadius","fontSize","strokeWidth","color","strokeColor","trailColor","fontColor","placement","style","marginBottom","format","_","margin","isMDXComponent"],"mappings":"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","file":"component---src-progress-demos-index-cn-mdx-f5c96828f151a09fdfb0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Codes/custom-ui-old/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport Progress from \"../index\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h4 {...{\n      \"id\": \"简介\"\n    }}>{`简介`}</h4>\n    <p>{`表示进度的进度条组件，支持圆形和线性进度条，有进度变化动画效果。`}</p>\n    <h2 {...{\n      \"id\": \"基础用法\"\n    }}>{`基础用法`}</h2>\n    <p>{`通过设置 linear 属性为 true 设置进度条为线型， 通过设置 circular 属性为 true 设置进度条为圆型， 两者只能二选一。`}</p>\n    <p>{`通过设置　percent 属性(0-100) 设置进度。`}</p>\n    <Playground __position={0} __code={'() => {\\n  const [percent, setPercent] = React.useState(0)\\n  return (\\n    <>\\n      <button onClick={() => setPercent(pre => (pre <= 90 ? pre + 10 : 100))}>\\n        Increase\\n      </button>\\n      <button onClick={() => setPercent(pre => (pre >= 10 ? pre - 10 : 0))}>\\n        Decrease\\n      </button>\\n      <Progress percent={percent} />\\n      <Progress percent={percent} circular />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Progress,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [percent, setPercent] = React.useState(0);\n        return <>\n                <button onClick={() => setPercent(pre => pre <= 90 ? pre + 10 : 100)}>Increase</button>\n                <button onClick={() => setPercent(pre => pre >= 10 ? pre - 10 : 0)}>Decrease</button>\n                <Progress percent={percent} mdxType=\"Progress\" />\n                <Progress percent={percent} circular mdxType=\"Progress\" />\n            </>;\n      }}\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"大小\"\n    }}>{`大小`}</h2>\n    <p>{`通过设置 size 属性 改变进度条大小。`}</p>\n    <p>{`circular 类型的size要求如下。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`interface {\n    size: number | string; // 视图宽高, 默认 100px\n    strokeWidth: number | string; // 进度条宽度，　默认8px\n    fontSize?: number | string; // 文字大小，　默认inherit\n};\n`}</code></pre>\n    <p>{`linear 类型的size要求如下。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`interface {\n    width: number | string; // 默认 200px\n    height: number | string; // 默认 8px\n    borderRadius?: number | string; // 默认 4px\n    fontSize?: number | string; // 默认inherit\n};\n`}</code></pre>\n    <Playground __position={2} __code={'<Progress\\n  percent={75}\\n  size={{ width: 100, height: \\'12px\\', borderRadius: 0, fontSize: \\'1.5em\\' }}\\n/>\\n<Progress\\n  percent={75}\\n  circular\\n  size={{ size: 200, strokeWidth: 12, fontSize: \\'66px\\' }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Progress,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Progress percent={75} size={{\n        width: 100,\n        height: '12px',\n        borderRadius: 0,\n        fontSize: '1.5em'\n      }} mdxType=\"Progress\" />\n    <Progress percent={75} circular size={{\n        size: 200,\n        strokeWidth: 12,\n        fontSize: '66px'\n      }} mdxType=\"Progress\" />\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"颜色\"\n    }}>{`颜色`}</h2>\n    <p>{`通过设置 color 属性为　\"合法的css颜色单位\"　来简单设置进度条颜色。`}</p>\n    <p>{`也可以设置为符合下面规则的对象来具体设置滑块、文字颜色。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`interface Color {\n    strokeColor: string; // 默认 #1890ff\n    trailColor?: string; // 默认 rgba(0, 0, 0, 0.1)\n    fontColor?: string; // 默认 #000\n}\n`}</code></pre>\n    <Playground __position={4} __code={'() => {\\n  const [percent, setPercent] = React.useState(0)\\n  return (\\n    <>\\n      <button onClick={() => setPercent(pre => (pre <= 90 ? pre + 10 : 100))}>\\n        Increase\\n      </button>\\n      <button onClick={() => setPercent(pre => (pre >= 10 ? pre - 10 : 0))}>\\n        Decrease\\n      </button>\\n      <Progress\\n        percent={percent}\\n        color=\\\"linear-gradient(to right, rgb(16, 142, 233) 0%, rgb(135, 208, 104) 100%)\\\"\\n      />\\n      <Progress percent={percent} circular color=\\\"pink\\\" />\\n      <Progress\\n        percent={percent}\\n        color={{\\n          strokeColor: \\'blue\\',\\n          trailColor: \\'yellow\\',\\n          fontColor: \\'red\\',\\n        }}\\n      />\\n      <Progress\\n        percent={percent}\\n        circular\\n        color={{\\n          strokeColor: \\'blue\\',\\n          trailColor: \\'yellow\\',\\n          fontColor: \\'red\\',\\n        }}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Progress,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [percent, setPercent] = React.useState(0);\n        return <>\n                <button onClick={() => setPercent(pre => pre <= 90 ? pre + 10 : 100)}>Increase</button>\n                <button onClick={() => setPercent(pre => pre >= 10 ? pre - 10 : 0)}>Decrease</button>\n                <Progress percent={percent} color=\"linear-gradient(to right, rgb(16, 142, 233) 0%, rgb(135, 208, 104) 100%)\" mdxType=\"Progress\" />\n                <Progress percent={percent} circular color=\"pink\" mdxType=\"Progress\" />\n                <Progress percent={percent} color={{\n            strokeColor: 'blue',\n            trailColor: 'yellow',\n            fontColor: 'red'\n          }} mdxType=\"Progress\" />\n                <Progress percent={percent} circular color={{\n            strokeColor: 'blue',\n            trailColor: 'yellow',\n            fontColor: 'red'\n          }} mdxType=\"Progress\" />\n            </>;\n      }}\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"文字位置\"\n    }}>{`文字位置`}</h2>\n    <p>{`通过设置 placement　属性为　\"none\" | \"center\"(circular类型默认) | \"top\" | \"bottom\" | \"right\"(linear类型默认) | \"left\"　来改变文字位置。`}</p>\n    <Playground __position={6} __code={'<Progress percent={75} placement=\\\"none\\\" style={{ marginBottom: 30 }} />\\n<Progress percent={75} placement=\\\"center\\\" style={{ marginBottom: 30 }} />\\n<Progress percent={75} placement=\\\"left\\\" style={{ marginBottom: 30 }} />\\n<Progress percent={75} placement=\\\"right\\\" style={{ marginBottom: 30 }} />\\n<Progress percent={75} placement=\\\"top\\\" style={{ marginBottom: 30 }} />\\n<Progress percent={75} placement=\\\"bottom\\\" style={{ marginBottom: 30 }} />\\n<Progress percent={75} circular placement=\\\"right\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Progress,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Progress percent={75} placement=\"none\" style={{\n        marginBottom: 30\n      }} mdxType=\"Progress\" />\n    <Progress percent={75} placement=\"center\" style={{\n        marginBottom: 30\n      }} mdxType=\"Progress\" />\n    <Progress percent={75} placement=\"left\" style={{\n        marginBottom: 30\n      }} mdxType=\"Progress\" />\n    <Progress percent={75} placement=\"right\" style={{\n        marginBottom: 30\n      }} mdxType=\"Progress\" />\n    <Progress percent={75} placement=\"top\" style={{\n        marginBottom: 30\n      }} mdxType=\"Progress\" />\n    <Progress percent={75} placement=\"bottom\" style={{\n        marginBottom: 30\n      }} mdxType=\"Progress\" />\n    <Progress percent={75} circular placement=\"right\" mdxType=\"Progress\" />\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"自定义文字内容\"\n    }}>{`自定义文字内容`}</h2>\n    <p>{`通过 format　属性自定义文字内容。`}</p>\n    <p>{`format接受当前进度值为参数，要求返回一个字符串。因为format中的参数是精确到个位数的动画变化值，所以比起传入的percent会有极短的延迟。`}</p>\n    <Playground __position={8} __code={'() => {\\n  const [percent, setPercent] = React.useState(0)\\n  return (\\n    <>\\n      <button onClick={() => setPercent(pre => (pre <= 90 ? pre + 10 : 100))}>\\n        Increase\\n      </button>\\n      <button onClick={() => setPercent(pre => (pre >= 10 ? pre - 10 : 0))}>\\n        Decrease\\n      </button>\\n      <Progress\\n        percent={percent}\\n        format={_ => (percent === 100 ? \\'success\\' : `${percent}个`)}\\n        color={percent === 100 ? \\'#52c41a\\' : \\'\\'}\\n        style={{ margin: \\'20px 0\\' }}\\n      />\\n      <Progress\\n        percent={percent}\\n        format={percent => (percent === 100 ? \\'success\\' : `${percent}个`)}\\n        color={percent === 100 ? \\'#52c41a\\' : \\'\\'}\\n      />\\n      <Progress\\n        percent={percent}\\n        circular\\n        format={percent => (percent === 100 ? \\'done\\' : `剩${100 - percent}%`)}\\n        color={percent === 100 ? \\'#52c41a\\' : \\'\\'}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Progress,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [percent, setPercent] = React.useState(0);\n        return <>\n                <button onClick={() => setPercent(pre => pre <= 90 ? pre + 10 : 100)}>Increase</button>\n                <button onClick={() => setPercent(pre => pre >= 10 ? pre - 10 : 0)}>Decrease</button>\n                <Progress percent={percent} format={_ => percent === 100 ? 'success' : `${percent}个`} color={percent === 100 ? '#52c41a' : ''} style={{\n            margin: '20px 0'\n          }} mdxType=\"Progress\" />\n                <Progress percent={percent} format={percent => percent === 100 ? 'success' : `${percent}个`} color={percent === 100 ? '#52c41a' : ''} mdxType=\"Progress\" />\n                <Progress percent={percent} circular format={percent => percent === 100 ? 'done' : `剩${100 - percent}%`} color={percent === 100 ? '#52c41a' : ''} mdxType=\"Progress\" />\n            </>;\n      }}\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"其他任意原生html属性事件\"\n    }}>{`其他任意原生html属性、事件`}</h2>\n    <br />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*percent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`进度`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number(0-100)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`linear`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否线型`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`circular`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否圆型`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`大小`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(\"linear\"){ width, height, borderRadius?, fontSize? } `}{`|`}{` (\"circular\"){ size, strokeWidth, fontSize? }`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`color`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`颜色`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"合法的css颜色单位\" `}{`|`}{` { strokeColor, trailColor, fontColor }`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`placement`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`文字位置`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"none\" `}{`|`}{` \"top\" `}{`|`}{` \"bottom\" `}{`|`}{` \"left\" `}{`|`}{` \"right\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(\"linear\")->\"right\" `}{`|`}{` (\"circular\")->\"center\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`format`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义文字`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(percent: number) => string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`其他`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`html属性`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`如 class, style, onClick 等`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
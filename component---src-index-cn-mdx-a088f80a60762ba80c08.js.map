{"version":3,"sources":["webpack:///../src/index.cn.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uRAQaA,EAAe,Q,kMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,MADR,MAGA,sEACA,kBACE,GAAM,UADR,WAGA,sBACE,kBAAIC,WAAW,MAAK,sBAAQA,WAAW,MAAnB,qCAEtB,uEACA,sEACA,2GACA,2DACA,8FACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,+BAEtB,iFACA,yDAAwC,sBAAQA,WAAW,KAAnB,cAAxC,KACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,uFAErB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,wBAErB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,2BAGvB,uBACA,kBACE,GAAM,cADR,eAGA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,iCAEtB,8FACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,8BAEtB,gFACA,6DACA,+DACA,sBACE,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,sBAEtB,4EACA,sG,gMAKJJ,EAAWK,gBAAiB","file":"component---src-index-cn-mdx-a088f80a60762ba80c08.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Codes/custom-ui-old/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"理念\"\n    }}>{`理念`}</h1>\n    <p>{`Custom-UI是一套面向C端的，移动端和响应式友好的material风格的UI组件库。`}</p>\n    <h2 {...{\n      \"id\": \"它有以下特性\"\n    }}>{`它有以下特性：`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`没有预置的主题配色，没有预置的尺寸，一切样式根据属性自动生成.`}</strong></li>\n    </ul>\n    <p>{`不同于一般的组件库会提供一套预置的配色方案。Custom-UI里的组件配色均由js自动生成。`}</p>\n    <p>{`以颜色举例，大多数情况下，你只需通过color='xxx'，组件会自动生成相应的其他配色。`}</p>\n    <p>{`比如按钮组件，其文字颜色、边框颜色、背景颜色、阴影效果以及悬浮时的这些样式都会根据color值自动生成。同时，这些属性也支持更复杂的配置用于生成你想要自定义的效果。`}</p>\n    <p>{`大多数情况下，你不需要写一行css样式代码就可以得到效果满意的组件。`}</p>\n    <p>{`Custom-UI也暴露了class, style以及所有的原生html属性，用于在想要保留一部分组件效果的前提下，进行自由度更大的定制。`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`没有定死的功能区块，组件只提供基本功能和交互效果.`}</strong></li>\n    </ul>\n    <p>{`以模态为例，Custom-UI只提供弹出一个浮窗的效果，并不会限制这个浮窗应该分为Header、Body等区域。`}</p>\n    <p>{`高自由度也意味着，Custom-UI里的大部分组件不适合开箱即用，`}<strong parentName=\"p\">{`适用于二次封装后使用`}</strong>{`。`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`基础组件均支持对应HTMLElement的属性，包括class、style、data Attribute以及ref等，使用上像是原生HTMLElement的增强.`}</strong></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`丰富的交互效果和移动端手势操作支持.`}</strong></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`完善的Typescript类型提示支持.`}</strong></p>\n      </li>\n    </ul>\n    <br />\n    <h2 {...{\n      \"id\": \"什么情况下不推荐用它\"\n    }}>{`什么情况下不推荐用它：`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`当你未使用Chrome, fireFox等现代浏览器.`}</strong></li>\n    </ul>\n    <p>{`Custom-UI运用了css3的一些新特性，以及WeakMap这样的没法Polyfill的js新特性，在设计之初就不考虑老浏览器的兼容。`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`当你介意额外css in js库和动画库的体积.`}</strong></li>\n    </ul>\n    <p>{`Custom-UI基于styled-components的css方案，用了react-spring做动画效果。`}</p>\n    <p>{`如果你无法接受这两个库带来的额外体积，那么Custom-UI并不适合你。`}</p>\n    <p>{`但是我强烈建议你在toC项目中运用这两个库，做出个性化的交互效果丰富的项目。`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`当你未使用Typescript.`}</strong></li>\n    </ul>\n    <p>{`为了提供降低css心智负担的组件的同时保留其可定制性，Custom-UI的同名属性会有多种互斥的写法。`}</p>\n    <p>{`尽管组件内已经尽可能进行了处理，但并不能保证在用Javascript使用Custom-UI时不会出现组件效果与你的使用预期（直觉）不符的情况。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
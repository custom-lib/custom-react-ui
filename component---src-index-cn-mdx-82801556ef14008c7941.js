(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"03WG":function(e,t,b){"use strict";b.r(t),b.d(t,"_frontmatter",(function(){return p})),b.d(t,"default",(function(){return o}));var l=b("k0FJ"),n=b("oedh"),c=(b("mXGw"),b("/FXl")),a=b("TjRS"),r=(b("aD51"),["components"]),p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/index.cn.mdx"}});var s={_frontmatter:p},u=a.a;function o(e){var t=e.components,b=Object(n.a)(e,r);return Object(c.b)(u,Object(l.a)({},s,b,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"理念"},"理念"),Object(c.b)("p",null,"Custom-UI是一套面向C端的，移动端和响应式友好的material风格的UI组件库。"),Object(c.b)("h2",{id:"它有以下特性"},"它有以下特性："),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"没有预置的主题配色，没有预置的尺寸，一切样式根据属性自动生成."))),Object(c.b)("p",null,"不同于一般的组件库会提供一套预置的配色方案。Custom-UI里的组件配色均由js自动生成。"),Object(c.b)("p",null,"以颜色举例，大多数情况下，你只需通过color='xxx'，组件会自动生成相应的其他配色。"),Object(c.b)("p",null,"比如按钮组件，其文字颜色、边框颜色、背景颜色、阴影效果以及悬浮时的这些样式都会根据color值自动生成。同时，这些属性也支持更复杂的配置用于生成你想要自定义的效果。"),Object(c.b)("p",null,"大多数情况下，你不需要写一行css样式代码就可以得到效果满意的组件。"),Object(c.b)("p",null,"Custom-UI也暴露了class, style以及所有的原生html属性，用于在想要保留一部分组件效果的前提下，进行自由度更大的定制。"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"没有定死的功能区块，组件只提供基本功能和交互效果."))),Object(c.b)("p",null,"以模态为例，Custom-UI只提供弹出一个浮窗的效果，并不会限制这个浮窗应该分为Header、Body等区域。"),Object(c.b)("p",null,"高自由度也意味着，Custom-UI里的大部分组件不适合开箱即用，",Object(c.b)("strong",{parentName:"p"},"适用于二次封装后使用"),"。"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"基础组件均支持对应HTMLElement的属性，包括class、style、data Attribute以及ref等，使用上像是原生HTMLElement的增强."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"丰富的交互效果和移动端手势操作支持."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"完善的Typescript类型提示支持.")))),Object(c.b)("br",null),Object(c.b)("h2",{id:"什么情况下不推荐用它"},"什么情况下不推荐用它："),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"当你未使用Chrome, fireFox等现代浏览器."))),Object(c.b)("p",null,"Custom-UI运用了css3的一些新特性，以及WeakMap这样的没法Polyfill的js新特性，在设计之初就不考虑老浏览器的兼容。"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"当你介意额外css in js库和动画库的体积."))),Object(c.b)("p",null,"Custom-UI基于styled-components的css方案，用了react-spring做动画效果。"),Object(c.b)("p",null,"如果你无法接受这两个库带来的额外体积，那么Custom-UI并不适合你。"),Object(c.b)("p",null,"但是我强烈建议你在toC项目中运用这两个库，做出个性化的交互效果丰富的项目。"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"当你未使用Typescript."))),Object(c.b)("p",null,"为了提供降低css心智负担的组件的同时保留其可定制性，Custom-UI的同名属性会有多种互斥的写法。"),Object(c.b)("p",null,"尽管组件内已经尽可能进行了处理，但并不能保证在用Javascript使用Custom-UI时不会出现组件效果与你的使用预期（直觉）不符的情况。"))}void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/index.cn.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-index-cn-mdx-82801556ef14008c7941.js.map
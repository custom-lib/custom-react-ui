{"version":3,"sources":["webpack:///../src/Modal/demos/index.cn.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Modal","BasicDemo","CloseDemo","React","zoom","setZoom","flip","setFlip","door","setDoor","slideUp","setSlideUp","slideDown","setSlideDown","slideLeft","setSlideLeft","slideRight","setSlideRight","rotate","setRotate","clipRectSp","setClipRectSp","clipRect","setSlipRect","clipCircle","setClipCircle","blur","setBlur","onClick","animationType","open","style","width","height","backgroundColor","boxShadow","borderRadius","isMDXComponent"],"mappings":"qUAYaA,EAAe,Q,8MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,MADR,MAGA,6EACA,kBACE,GAAM,QADR,QAGA,2EACA,gFACA,kBACE,GAAM,WADR,WAGA,6CACA,2DACA,2DACA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,uBADZ,0sCAyCL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gBAAiBC,SAAO,GACzDL,QACAH,kBACAS,eACAC,UACAC,cACAC,eANyD,gBAOzDZ,IAPyD,EAQzDH,eARyD,GASxDO,QAAQ,cACX,YAAC,IAAD,CAAWA,QAAQ,eAEnB,uBACA,kBACE,GAAM,kBADR,kBAGA,uHACA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,uBADZ,wzBAmCL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gBAAiBC,SAAO,GACzDL,QACAH,kBACAS,eACAC,UACAC,cACAC,eANyD,gBAOzDZ,IAPyD,EAQzDH,eARyD,GASxDO,QAAQ,cACX,YAAC,IAAD,CAAWA,QAAQ,eAEnB,uBACA,kBACE,GAAM,YADR,YAGA,sDACA,8MACA,kEACA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,uBADZ,yEAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,k1LAAm4LC,SAAO,GAC36LL,QACAH,kBACAS,eACAC,UACAC,cACAC,eAN26L,gBAO36LZ,IAP26L,EAQ36LH,eAR26L,GAS16LO,QAAQ,eACV,WACG,MAAwBS,YAAe,GAAhCC,EAAP,KAAaC,EAAb,KACA,EAAwBF,YAAe,GAAhCG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,YAAe,GAAhCK,EAAP,KAAaC,EAAb,KACA,EAA8BN,YAAe,GAAtCO,EAAP,KAAgBC,EAAhB,KACA,EAAkCR,YAAe,GAA1CS,EAAP,KAAkBC,EAAlB,KACA,EAAkCV,YAAe,GAA1CW,EAAP,KAAkBC,EAAlB,KACA,EAAoCZ,YAAe,GAA5Ca,EAAP,KAAmBC,EAAnB,KACA,EAA4Bd,YAAe,GAApCe,EAAP,KAAeC,EAAf,KACA,EAAoChB,YAAe,GAA5CiB,EAAP,KAAmBC,EAAnB,KACA,EAAgClB,YAAe,GAAxCmB,EAAP,KAAiBC,EAAjB,KACA,EAAoCpB,YAAe,GAA5CqB,EAAP,KAAmBC,EAAnB,KACA,EAAwBtB,YAAe,GAAhCuB,EAAP,KAAaC,EAAb,KACA,OAAO,4BACC,sBAAQC,QAAS,kBAAMvB,GAAQ,KAA/B,WACA,YAAC,IAAD,CAAOwB,cAAc,OAAOC,KAAM1B,EAAM2B,MAAO,CACnDC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMvB,GAAQ,KAA/B,YAEJ,sBAAQuB,QAAS,kBAAMrB,GAAQ,KAA/B,WACA,YAAC,IAAD,CAAOsB,cAAc,OAAOC,KAAMxB,EAAMyB,MAAO,CACnDC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMrB,GAAQ,KAA/B,YAEJ,sBAAQqB,QAAS,kBAAMnB,GAAQ,KAA/B,WACA,YAAC,IAAD,CAAOoB,cAAc,OAAOC,KAAMtB,EAAMuB,MAAO,CACnDC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMnB,GAAQ,KAA/B,YAEJ,sBAAQmB,QAAS,kBAAMjB,GAAW,KAAlC,cACA,YAAC,IAAD,CAAOkB,cAAc,UAAUC,KAAMpB,EAASqB,MAAO,CACzDC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMjB,GAAW,KAAlC,eAEJ,sBAAQiB,QAAS,kBAAMf,GAAa,KAApC,gBACA,YAAC,IAAD,CAAOgB,cAAc,YAAYC,KAAMlB,EAAWmB,MAAO,CAC7DC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMf,GAAa,KAApC,iBAEJ,sBAAQe,QAAS,kBAAMb,GAAa,KAApC,gBACA,YAAC,IAAD,CAAOc,cAAc,YAAYC,KAAMhB,EAAWiB,MAAO,CAC7DC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMb,GAAa,KAApC,iBAEJ,sBAAQa,QAAS,kBAAMX,GAAc,KAArC,iBACA,YAAC,IAAD,CAAOY,cAAc,aAAaC,KAAMd,EAAYe,MAAO,CAC/DC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMX,GAAc,KAArC,kBAEJ,sBAAQW,QAAS,kBAAMT,GAAU,KAAjC,aACA,YAAC,IAAD,CAAOU,cAAc,SAASC,KAAMZ,EAAQa,MAAO,CACvDC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMT,GAAU,KAAjC,cAEJ,sBAAQS,QAAS,kBAAMP,GAAc,KAArC,iBACA,YAAC,IAAD,CAAOQ,cAAc,aAAaC,KAAMV,EAAYW,MAAO,CAC/DC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMP,GAAc,KAArC,kBAEJ,sBAAQO,QAAS,kBAAML,GAAY,KAAnC,eACA,YAAC,IAAD,CAAOM,cAAc,WAAWC,KAAMR,EAAUS,MAAO,CAC3DC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAML,GAAY,KAAnC,gBAEJ,sBAAQK,QAAS,kBAAMH,GAAc,KAArC,iBACA,YAAC,IAAD,CAAOI,cAAc,aAAaC,KAAMN,EAAYO,MAAO,CAC/DC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMH,GAAc,KAArC,kBAEJ,sBAAQG,QAAS,kBAAMD,GAAQ,KAA/B,UACA,YAAC,IAAD,CAAOE,cAAc,OAAOC,KAAMJ,EAAMK,MAAO,CACnDC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,UAAW,qCACXC,aAAc,GACb1C,QAAQ,SACD,sBAAQkC,QAAS,kBAAMD,GAAQ,KAA/B,gBAKhB,uBACA,kBACE,GAAM,gBADR,gBAGA,qEACA,0EACA,uBACA,kBACE,GAAM,MADR,MAGA,+DACA,+DACA,kEACA,uBACA,kBACE,GAAM,OADR,OAGA,yBACE,qBAAOhC,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,MAGA,kBAAIA,WAAW,KACb,MAAS,MADX,MAGA,kBAAIA,WAAW,KACb,MAAS,MADX,MAGA,kBAAIA,WAAW,KACb,MAAS,MADX,SAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,gBAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,iBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MADX,kPAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,qBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,iBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,mCAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,gBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,cAGA,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,cAGA,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MADX,YAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,oBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,gBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,MADX,iBAGA,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,YAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MADX,SAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,iBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,mBAGA,kBAAIA,WAAW,KACb,MAAS,OAEX,kBAAIA,WAAW,KACb,MAAS,QAGb,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,MADX,0BAGA,kBAAIA,WAAW,KACb,MAAS,OAEX,kBAAIA,WAAW,KACb,MAAS,gB,4MASrBJ,EAAW8C,gBAAiB","file":"component---src-modal-demos-index-cn-mdx-052829d6dae572870ac3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Codes/custom-ui-old/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport Modal from \"../index\";\nimport BasicDemo from './basic';\nimport CloseDemo from './close';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h4 {...{\n      \"id\": \"简介\"\n    }}>{`简介`}</h4>\n    <p>{`模态，用于重量级的交互提示上。不提供预置的功能区块，取消、确认按钮等，只提供基础的过渡动画和蒙版等效果。`}</p>\n    <h2 {...{\n      \"id\": \"放置容器\"\n    }}>{`放置容器`}</h2>\n    <p>{`Modal需要一个容器来放置，通过 container 属性指定一个合法的DOM HTML元素指定。`}</p>\n    <p>{`如果未指定，将默认在body项下生成 id 为 'modal-container' 的div元素作为放置容器。`}</p>\n    <h2 {...{\n      \"id\": \"开关与基础用法\"\n    }}>{`开关与基础用法`}</h2>\n    <p>{`通过设置 open 属性开关Modal。`}</p>\n    <p>{`Modal框的包裹容器，即Modal组件本身，会自适应子元素的宽高。`}</p>\n    <p>{`也可以通过 className, style 属性，直接设置其样式。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from '../index';\nconst Modal1Content = styled.div\\`\n    display: inline-block;\n    width: 400px;\n    height: 300px;\n    background-color: #fff;\n    border-radius: 4px;\n    box-shadow: 1px 1px 10px 1px rgba(0, 0, 0, .5);\n\\`\nconst Modal2 = styled(Modal)\\`\n    width: 200px;\n    height: 100px;\n    background-color: #fff;\n    border-radius: 4px;\n    box-shadow: 1px 1px 10px 1px rgba(0, 0, 0, .5);\n\\`\nconst BasicDemo = () => {\n    const [open1, set1] = useState(false);\n    const [open2, set2] = useState(false);\n    return (\n        <>\n            <button onClick={() => set1(true)}>打开Modal1</button>\n            <Modal open={open1}>\n                <Modal1Content>\n                    <p>这是模态框1</p>\n                    <button onClick={() => set1(false)}>关闭Modal1</button>\n                </Modal1Content>\n            </Modal>\n            <button onClick={() => set2(true)}>打开Modal2</button>\n            <Modal2 open={open2} style={{ color: 'red '}}>\n                <p>这是模态框2</p>\n                <button onClick={() => set2(false)}>关闭Modal2</button>\n            </Modal2>\n        </>\n    );\n}\n`}</code></pre>\n    <Playground __position={0} __code={'<BasicDemo />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Modal,\n      BasicDemo,\n      CloseDemo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <BasicDemo mdxType=\"BasicDemo\" />\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"按esc键与点击其他位置关闭\"\n    }}>{`按esc键与点击其他位置关闭`}</h2>\n    <p>{`通过设置 escToClose(默认为true) 和 clickToClose 这两个属性为true， 使在按下esc键和点击页面非模态框的其他位置时，触发Modal的onClose事件。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from '../index';\n\nconst Content = styled.div\\`\n    display: inline-block;\n    width: 400px;\n    height: 300px;\n    background-color: #fff;\n    border-radius: 4px;\n    box-shadow: 1px 1px 10px 1px rgba(0, 0, 0, .5);\n\\`\n\nconst CloseDemo = () => {\n    const [open, set] = useState(false);\n    const openModal = () => {\n        set(true);\n    }\n    const closeModal = () => {\n        set(false);\n    }\n    return (\n        <>\n            <button onClick={openModal}>打开Modal</button>\n            <Modal open={open} escToClose clickToClose onClose={closeModal} >\n                <Content>\n                    <p>按esc键或者点击其他地方关闭</p>\n                </Content>\n            </Modal>\n        </>\n    );\n}\n`}</code></pre>\n    <Playground __position={2} __code={'<CloseDemo />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Modal,\n      BasicDemo,\n      CloseDemo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <CloseDemo mdxType=\"CloseDemo\" />\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"自定义进出场动画\"\n    }}>{`自定义进出场动画`}</h2>\n    <p>{`通过设置 animationType 属性改变进出场动画。`}</p>\n    <p>{`animationType 可为 \"zoom\"(默认) | \"fade\" | \"flip\" | \"door\" | \"slideUp\" | \"slideDown\" | \"slideRight\" | \"slideLeft\" | \"rotate\" | \"blur\" | \"clipRectSp\" | \"clipRect\" | \"clipCircle\" 设置进出场动画。`}</p>\n    <p>{`通过设置 animationDuration 属性(ms)，修改进出场动画持续时间`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`type animationDuration = number | { enter: number, leave: number }\n`}</code></pre>\n    <Playground __position={4} __code={'() => {\\n  const [zoom, setZoom] = React.useState(false)\\n  const [flip, setFlip] = React.useState(false)\\n  const [door, setDoor] = React.useState(false)\\n  const [slideUp, setSlideUp] = React.useState(false)\\n  const [slideDown, setSlideDown] = React.useState(false)\\n  const [slideLeft, setSlideLeft] = React.useState(false)\\n  const [slideRight, setSlideRight] = React.useState(false)\\n  const [rotate, setRotate] = React.useState(false)\\n  const [clipRectSp, setClipRectSp] = React.useState(false)\\n  const [clipRect, setSlipRect] = React.useState(false)\\n  const [clipCircle, setClipCircle] = React.useState(false)\\n  const [blur, setBlur] = React.useState(false)\\n  return (\\n    <>\\n      <button onClick={() => setZoom(true)}>打开 zoom</button>\\n      <Modal\\n        animationType=\\\"zoom\\\"\\n        open={zoom}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setZoom(false)}>关闭 zoom</button>\\n      </Modal>\\n      <button onClick={() => setFlip(true)}>打开 flip</button>\\n      <Modal\\n        animationType=\\\"flip\\\"\\n        open={flip}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setFlip(false)}>关闭 flip</button>\\n      </Modal>\\n      <button onClick={() => setDoor(true)}>打开 door</button>\\n      <Modal\\n        animationType=\\\"door\\\"\\n        open={door}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setDoor(false)}>关闭 door</button>\\n      </Modal>\\n      <button onClick={() => setSlideUp(true)}>打开 slideUp</button>\\n      <Modal\\n        animationType=\\\"slideUp\\\"\\n        open={slideUp}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setSlideUp(false)}>关闭 slideUp</button>\\n      </Modal>\\n      <button onClick={() => setSlideDown(true)}>打开 slideDown</button>\\n      <Modal\\n        animationType=\\\"slideDown\\\"\\n        open={slideDown}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setSlideDown(false)}>关闭 slideDown</button>\\n      </Modal>\\n      <button onClick={() => setSlideLeft(true)}>打开 slideLeft</button>\\n      <Modal\\n        animationType=\\\"slideLeft\\\"\\n        open={slideLeft}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setSlideLeft(false)}>关闭 slideLeft</button>\\n      </Modal>\\n      <button onClick={() => setSlideRight(true)}>打开 slideRight</button>\\n      <Modal\\n        animationType=\\\"slideRight\\\"\\n        open={slideRight}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setSlideRight(false)}>关闭 slideRight</button>\\n      </Modal>\\n      <button onClick={() => setRotate(true)}>打开 rotate</button>\\n      <Modal\\n        animationType=\\\"rotate\\\"\\n        open={rotate}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setRotate(false)}>关闭 rotate</button>\\n      </Modal>\\n      <button onClick={() => setClipRectSp(true)}>打开 clipRectSp</button>\\n      <Modal\\n        animationType=\\\"clipRectSp\\\"\\n        open={clipRectSp}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setClipRectSp(false)}>关闭 clipRectSp</button>\\n      </Modal>\\n      <button onClick={() => setSlipRect(true)}>打开 clipRect</button>\\n      <Modal\\n        animationType=\\\"clipRect\\\"\\n        open={clipRect}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setSlipRect(false)}>关闭 clipRect</button>\\n      </Modal>\\n      <button onClick={() => setClipCircle(true)}>打开 clipCircle</button>\\n      <Modal\\n        animationType=\\\"clipCircle\\\"\\n        open={clipCircle}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setClipCircle(false)}>关闭 clipCircle</button>\\n      </Modal>\\n      <button onClick={() => setBlur(true)}>打开blur</button>\\n      <Modal\\n        animationType=\\\"blur\\\"\\n        open={blur}\\n        style={{\\n          width: 400,\\n          height: 300,\\n          backgroundColor: \\'#fff\\',\\n          boxShadow: \\'1px 1px 10px 1px rgba(0, 0, 0, .5)\\',\\n          borderRadius: 4,\\n        }}\\n      >\\n        <button onClick={() => setBlur(false)}>关闭 blur</button>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Modal,\n      BasicDemo,\n      CloseDemo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [zoom, setZoom] = React.useState(false);\n        const [flip, setFlip] = React.useState(false);\n        const [door, setDoor] = React.useState(false);\n        const [slideUp, setSlideUp] = React.useState(false);\n        const [slideDown, setSlideDown] = React.useState(false);\n        const [slideLeft, setSlideLeft] = React.useState(false);\n        const [slideRight, setSlideRight] = React.useState(false);\n        const [rotate, setRotate] = React.useState(false);\n        const [clipRectSp, setClipRectSp] = React.useState(false);\n        const [clipRect, setSlipRect] = React.useState(false);\n        const [clipCircle, setClipCircle] = React.useState(false);\n        const [blur, setBlur] = React.useState(false);\n        return <>\n                <button onClick={() => setZoom(true)}>打开 zoom</button>\n                <Modal animationType=\"zoom\" open={zoom} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setZoom(false)}>关闭 zoom</button>\n                </Modal>\n                <button onClick={() => setFlip(true)}>打开 flip</button>\n                <Modal animationType=\"flip\" open={flip} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setFlip(false)}>关闭 flip</button>\n                </Modal>\n                <button onClick={() => setDoor(true)}>打开 door</button>\n                <Modal animationType=\"door\" open={door} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setDoor(false)}>关闭 door</button>\n                </Modal>\n                <button onClick={() => setSlideUp(true)}>打开 slideUp</button>\n                <Modal animationType=\"slideUp\" open={slideUp} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setSlideUp(false)}>关闭 slideUp</button>\n                </Modal>\n                <button onClick={() => setSlideDown(true)}>打开 slideDown</button>\n                <Modal animationType=\"slideDown\" open={slideDown} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setSlideDown(false)}>关闭 slideDown</button>\n                </Modal>\n                <button onClick={() => setSlideLeft(true)}>打开 slideLeft</button>\n                <Modal animationType=\"slideLeft\" open={slideLeft} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setSlideLeft(false)}>关闭 slideLeft</button>\n                </Modal>\n                <button onClick={() => setSlideRight(true)}>打开 slideRight</button>\n                <Modal animationType=\"slideRight\" open={slideRight} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setSlideRight(false)}>关闭 slideRight</button>\n                </Modal>\n                <button onClick={() => setRotate(true)}>打开 rotate</button>\n                <Modal animationType=\"rotate\" open={rotate} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setRotate(false)}>关闭 rotate</button>\n                </Modal>\n                <button onClick={() => setClipRectSp(true)}>打开 clipRectSp</button>\n                <Modal animationType=\"clipRectSp\" open={clipRectSp} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setClipRectSp(false)}>关闭 clipRectSp</button>\n                </Modal>\n                <button onClick={() => setSlipRect(true)}>打开 clipRect</button>\n                <Modal animationType=\"clipRect\" open={clipRect} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setSlipRect(false)}>关闭 clipRect</button>\n                </Modal>\n                <button onClick={() => setClipCircle(true)}>打开 clipCircle</button>\n                <Modal animationType=\"clipCircle\" open={clipCircle} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setClipCircle(false)}>关闭 clipCircle</button>\n                </Modal>                \n                <button onClick={() => setBlur(true)}>打开blur</button>\n                <Modal animationType=\"blur\" open={blur} style={{\n            width: 400,\n            height: 300,\n            backgroundColor: '#fff',\n            boxShadow: '1px 1px 10px 1px rgba(0, 0, 0, .5)',\n            borderRadius: 4\n          }} mdxType=\"Modal\">\n                    <button onClick={() => setBlur(false)}>关闭 blur</button>\n                </Modal>\n            </>;\n      }}\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"自定义位置与外层容器样式\"\n    }}>{`自定义位置与外层容器样式`}</h2>\n    <p>{`Modal框外有一层position为fixed的包裹容器用于使Modal相对窗口居中。`}</p>\n    <p>{`可以通过 wrapperClassName， wrapperStyle 属性设置其样式，调整位置。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"蒙版\"\n    }}>{`蒙版`}</h2>\n    <p>{`通过设置 showMask 属性为false来关闭蒙版(即默认为true)。`}</p>\n    <p>{`蒙版会屏蔽底下东西的点击，锁定body窗口的滚动，让用户聚焦在Modal上。`}</p>\n    <p>{`通过 maskStyle, maskClassName 这两个属性自定义蒙版样式。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`open`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`开关Modal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`container`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`放置容器`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`HTMLElemengt`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`animationType`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`消息项过渡动画`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"zoom\" `}{`|`}{` \"blur\" `}{`|`}{` \"clipRectSp\" `}{`|`}{` \"clipRect\" `}{`|`}{` \"clipCircle\" `}{`|`}{` \"fade\" `}{`|`}{` \"flip\" `}{`|`}{` \"door\" `}{`|`}{` \"slideUp\" `}{`|`}{` \"slideDown\" `}{`|`}{` \"slideRight\" `}{`|`}{` \"slideLeft\" `}{`|`}{` \"rotate\" `}{`|`}{` \"zoom\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`animationDuration`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`消息项动画持续时间(ms)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number `}{`|`}{` { enter, leave }`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`clickToClose`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`点击其他元素触发关闭`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`escToClose`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`按esc键触发关闭`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClose`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`触发关闭回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`wrapperClassName`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`包裹容器class`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`wrapperStyle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`包裹容器style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`showMask`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`显示蒙版`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maskClassName`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`蒙版class\tstring`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`maskStyke`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`蒙版style\tCSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
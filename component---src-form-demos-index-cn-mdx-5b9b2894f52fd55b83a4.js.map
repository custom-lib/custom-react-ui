{"version":3,"sources":["webpack:///../src/Form/demos/index.cn.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Form","Input","Checkbox","Button","Demo","onSubmit","data","console","log","name","label","rules","required","helperText","variant","maxLength","pattern","style","marginBottom","type","display","marginTop","parentName","isMDXComponent"],"mappings":"8VAcaA,EAAe,Q,6MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,MADR,MAGA,iCACA,0EACA,kBACE,GAAM,QADR,QAGA,kEACA,qDACA,gJACA,4GACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,yhCAAkjCC,SAAO,GAC1lCJ,QACAH,kBACAQ,eACAC,SACAC,UACAC,aACAC,WACAC,UAR0lC,gBAS1lCb,IAT0lC,EAU1lCH,eAV0lC,GAWzlCO,QAAQ,cACX,YAAC,IAAD,CAAMU,SAAU,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,IAAOX,QAAQ,QAC/C,YAAC,IAAD,CAAOc,KAAK,OAAOC,MAAM,aAAaC,MAAO,CAAC,CAC5CC,UAAU,EACVC,WAAY,0BACVlB,QAAQ,UACZ,YAAC,IAAD,CAAOc,KAAK,MAAMK,QAAQ,WAAWJ,MAAM,YAAYC,MAAO,CAAC,CAC7DI,UAAW,EACXF,WAAY,oBACVlB,QAAQ,UACZ,YAAC,IAAD,CAAOc,KAAK,MAAMC,MAAM,YAAYC,MAAO,CAAC,CAC1CC,UAAU,EACVC,WAAY,oBACX,CACDG,QAAS,MACTH,WAAY,uBACVlB,QAAQ,UACZ,YAAC,IAAD,CAAOc,KAAK,WAAWC,MAAM,iBAAiBC,MAAO,CAAC,CACpDC,UAAU,EACVC,WAAY,0BACVI,MAAO,CACTC,aAAc,IACbvB,QAAQ,UACX,YAAC,IAAD,CAAUc,KAAK,QAAQE,MAAO,CAAC,CAC7BC,UAAU,EACVC,WAAY,mDACVlB,QAAQ,YAHZ,QAIA,YAAC,IAAD,CAAUc,KAAK,mBAAmBd,QAAQ,YAA1C,QACA,YAAC,IAAD,CAAQwB,KAAK,SAASF,MAAO,CAC3BG,QAAS,QACTC,UAAW,IACV1B,QAAQ,UAHX,QAQJ,uBACA,kBACE,GAAM,0BADR,0BAGA,0DAAyC,iBAAG2B,WAAW,IACnD,KAAQ,2CAD6B,MAAzC,KAGA,uEACA,mFACA,uDACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,uBADZ,2kFAwDL,YAAC,IAAD,CAAY1B,WAAY,EAAGC,OAAQ,WAAYC,SAAO,GACpDJ,QACAH,kBACAQ,eACAC,SACAC,UACAC,aACAC,WACAC,UARoD,gBASpDb,IAToD,EAUpDH,eAVoD,GAWnDO,QAAQ,cACX,YAAC,IAAD,CAAMA,QAAQ,gB,2MAMlBH,EAAW+B,gBAAiB","file":"component---src-form-demos-index-cn-mdx-5b9b2894f52fd55b83a4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Codes/custom-ui-old/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport Form from \"../index\";\nimport Input from \"../../Input/demos/StyledInput\";\nimport Checkbox from \"../../Checkbox\";\nimport Button from \"../../Button\";\nimport Demo from './demo';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h4 {...{\n      \"id\": \"简介\"\n    }}>{`简介`}</h4>\n    <p>{`零侵入性的表单。`}</p>\n    <p>{`对react-hook-form的进一步封装，也支持react-hook-form API的使用。`}</p>\n    <h2 {...{\n      \"id\": \"基础用法\"\n    }}>{`基础用法`}</h2>\n    <p>{`Form组件会绑定其内写明了 name 属性的 custom-ui库中的表单组件。`}</p>\n    <p>{`在提交表单前，根据表单组件的 rules属性 做次校验。`}</p>\n    <p>{`rules属性要求包含两个键值对的对象数组，键值对中的其中一个键必须是helperText用于错误提示，另一个是html原生的校验规则(required, pattern, min, max, minLength, maxLength)。`}</p>\n    <p>{`通过校验才会触发Form的onSubmit, onSubmit回调函数中的第一个参数是Form内表单组件的数据集合对象，键为表单组件的name属性，值为表单组件的值。`}</p>\n    <Playground __position={0} __code={'<Form onSubmit={data => console.log(data)}>\\n  <Input\\n    name=\\\"user\\\"\\n    label=\\\"Input user\\\"\\n    rules={[{ required: true, helperText: \\'UserName is required.\\' }]}\\n  />\\n  <Input\\n    name=\\\"sex\\\"\\n    variant=\\\"outlined\\\"\\n    label=\\\"input sex\\\"\\n    rules={[{ maxLength: 3, helperText: \\'MaxLength is 3.\\' }]}\\n  />\\n  <Input\\n    name=\\\"age\\\"\\n    label=\\\"input age\\\"\\n    rules={[\\n      { required: true, helperText: \\'Age is required.\\' },\\n      { pattern: /\\\\d+/, helperText: \\'Age must be number\\' },\\n    ]}\\n  />\\n  <Input\\n    name=\\\"password\\\"\\n    label=\\\"Input Password\\\"\\n    rules={[{ required: true, helperText: \\'Password is required.\\' }]}\\n    style={{ marginBottom: 40 }}\\n  />\\n  <Checkbox\\n    name=\\\"agree\\\"\\n    rules={[\\n      {\\n        required: true,\\n        helperText: \\'You must agree toTerms of UseandPrivacy Policy\\',\\n      },\\n    ]}\\n  >\\n    同意协议\\n  </Checkbox>\\n  <Checkbox name=\\\"remember-account\\\">记住账号</Checkbox>\\n  <Button type=\\\"submit\\\" style={{ display: \\'block\\', marginTop: 24 }}>\\n    提交\\n  </Button>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Input,\n      Checkbox,\n      Button,\n      Demo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Form onSubmit={data => console.log(data)} mdxType=\"Form\">\n        <Input name=\"user\" label=\"Input user\" rules={[{\n          required: true,\n          helperText: 'UserName is required.'\n        }]} mdxType=\"Input\" />\n        <Input name=\"sex\" variant=\"outlined\" label=\"input sex\" rules={[{\n          maxLength: 3,\n          helperText: 'MaxLength is 3.'\n        }]} mdxType=\"Input\" />\n        <Input name=\"age\" label=\"input age\" rules={[{\n          required: true,\n          helperText: 'Age is required.'\n        }, {\n          pattern: /\\d+/,\n          helperText: 'Age must be number'\n        }]} mdxType=\"Input\" />\n        <Input name=\"password\" label=\"Input Password\" rules={[{\n          required: true,\n          helperText: 'Password is required.'\n        }]} style={{\n          marginBottom: 40\n        }} mdxType=\"Input\" />\n        <Checkbox name=\"agree\" rules={[{\n          required: true,\n          helperText: 'You must agree toTerms of UseandPrivacy Policy'\n        }]} mdxType=\"Checkbox\">同意协议</Checkbox>\n        <Checkbox name=\"remember-account\" mdxType=\"Checkbox\">记住账号</Checkbox>\n        <Button type=\"submit\" style={{\n          display: 'block',\n          marginTop: 24\n        }} mdxType=\"Button\">\n            提交\n        </Button>\n    </Form>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"使用react-hook-form的进阶功能\"\n    }}>{`使用react-hook-form的进阶功能`}</h2>\n    <p>{`Form导出了react-hook-form的全部API, 使用详情`}<a parentName=\"p\" {...{\n        \"href\": \"https://react-hook-form.com/get-started\"\n      }}>{`请看`}</a>{`。`}</p>\n    <p>{`需要使用 useForm 获取所有方法， 通过 FormProvider 注入给 Form。`}</p>\n    <p>{`之后可以像上一步的例子一样使用custom-ui里提供的表单组件的内置rules属性， 并支持watch等高级用法。`}</p>\n    <p>{`也可以通过 register 方法 自行注册任意的表单组件。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport Form, { useForm, FormProvider } from '../index';\nimport Input from \"../../Input/demo/StyledInput\";\nimport Checkbox from \"../../Checkbox\";\nimport Button from \"../../Button\";\n\nconst Demo = () => {\n    const methods = useForm(); // initialise the hook\n    const { register, errors, watch } = methods;\n    \n    return (\n        <FormProvider {...methods}>\n            <Form onSubmit={data => console.log(data)}>\n                <input ref={register({ required: true })} name=\"user\" placeholder=\"Input user\" />\n                {errors.user && <span>User is required.</span>}\n                <Input\n                    name=\"email\"\n                    label=\"input email\"\n                    ref={register({\n                        required: \"email is required.\",\n                        pattern: {\n                            value: /^(([^<>()[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()[\\\\]\\\\\\\\.,;:\\\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/,\n                            message: 'error email format'\n                        }\n                    })}\n                    error={errors?.email}\n                    helperText={errors?.email?.message}\n                />\n                <Input name=\"sex\" variant=\"outlined\" label=\"input sex\"  rules={[{ required: true, helperText: 'Sex is required.' }, { maxLength: 3, helperText: 'MaxLength is 3.' }]}/>\n                <Input\n                    name=\"age\"\n                    label=\"input age\" \n                    rules={[{ required: true, helperText: 'Age is required.' }, { pattern: /\\\\d+/, helperText: 'Age must be number' }]}\n                />\n                <Input\n                    name=\"password\"\n                    label=\"Input Password\" \n                    rules={[{ required: true, helperText: 'Password is required.' }]}\n                />\n                <Input\n                    name=\"password_confirm\"\n                    label=\"Input password again\" \n                    rules={[{ validate: (value: string) => value === watch(\"password\"), helperText: 'Password different ' }]}\n                />\n                <Checkbox name=\"agree\" rules={[{ required: true, helperText: 'You must agree toTerms of UseandPrivacy Policy' }]}>同意协议</Checkbox>\n                <Checkbox name=\"remember-account\">记住账号</Checkbox>\n                <Button type=\"submit\" style={{ display: 'block', marginTop: 24 }}>\n                    提交\n                </Button>\n            </Form>\n        </FormProvider>\n    );\n}\n`}</code></pre>\n    <Playground __position={2} __code={'<Demo />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Input,\n      Checkbox,\n      Button,\n      Demo,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Demo mdxType=\"Demo\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
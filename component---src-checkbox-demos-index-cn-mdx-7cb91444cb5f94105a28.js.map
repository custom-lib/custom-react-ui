{"version":3,"sources":["webpack:///../src/Checkbox/demos/index.cn.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Checkbox","style","lineHeight","interactive","color","size","labelPlacement","labelDistance","disabled","checked","React","group1","setGroup1","group2","setGroup2","Group","onChange","value","name","marginLeft","join","defaultValue","max","setValue","length","parentName","isMDXComponent"],"mappings":"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","file":"component---src-checkbox-demos-index-cn-mdx-7cb91444cb5f94105a28.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Codes/custom-ui-old/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport Checkbox from \"../index\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h4 {...{\n      \"id\": \"简介\"\n    }}>{`简介`}</h4>\n    <p>{`多选框`}</p>\n    <h2 {...{\n      \"id\": \"可交互背景\"\n    }}>{`可交互背景`}</h2>\n    <p>{`设置 interactive 为 \"background\"(默认) / true 启用选择框可交互背景，false 关闭。`}</p>\n    <p>{`当 interactive 为 \"background\" 时， 可交互背景的并不占据真实空间，为true时占据真实空间。`}</p>\n    <Playground __position={0} __code={'<div style={{ lineHeight: \\'16px\\' }}>111111111111111111111111111111111</div>\\n<Checkbox interactive=\\\"background\\\">选择框1</Checkbox>\\n<div style={{ lineHeight: \\'16px\\' }}>111111111111111111111111111111111</div>\\n<Checkbox interactive={true}>选择框2</Checkbox>\\n<div style={{ lineHeight: \\'16px\\' }}>111111111111111111111111111111111</div>\\n<Checkbox interactive={false}>选择框3</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <div style={{\n        lineHeight: '16px'\n      }}>111111111111111111111111111111111</div>\n    <Checkbox interactive=\"background\" mdxType=\"Checkbox\">选择框1</Checkbox>\n    <div style={{\n        lineHeight: '16px'\n      }}>111111111111111111111111111111111</div>\n    <Checkbox interactive={true} mdxType=\"Checkbox\">选择框2</Checkbox>\n    <div style={{\n        lineHeight: '16px'\n      }}>111111111111111111111111111111111</div>\n    <Checkbox interactive={false} mdxType=\"Checkbox\">选择框3</Checkbox>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"颜色\"\n    }}>{`颜色`}</h2>\n    <p>{`通过设置 color 属性为 \"合法的css颜色字符串\" 改变Checkbox颜色(默认为\"#3E4DA7\")。`}</p>\n    <Playground __position={2} __code={'<Checkbox color=\\\"red\\\">选择框1</Checkbox>\\n<Checkbox color=\\\"green\\\">选择框2</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox color=\"red\" mdxType=\"Checkbox\">选择框1</Checkbox>\n    <Checkbox color=\"green\" mdxType=\"Checkbox\">选择框2</Checkbox>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"大小\"\n    }}>{`大小`}</h2>\n    <p>{`通过设置 size 属性为 \"合法的css长度单位\" 改变Checkbox大小(默认为\"20px\")。`}</p>\n    <Playground __position={4} __code={'<Checkbox size={14}>选择框1</Checkbox>\\n<Checkbox size=\\\"32px\\\">选择框2</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox size={14} mdxType=\"Checkbox\">选择框1</Checkbox>\n    <Checkbox size=\"32px\" mdxType=\"Checkbox\">选择框2</Checkbox>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"children标签放置位置\"\n    }}>{`children标签放置位置`}</h2>\n    <p>{`通过设置 labelPlacement 属性为 \"bottom\" | \"top\" | \"left\" | \"right\"(默认) 改变children标签放置位置。`}</p>\n    <Playground __position={6} __code={'<Checkbox labelPlacement=\\\"bottom\\\">在下面</Checkbox>\\n<Checkbox labelPlacement=\\\"top\\\">在上面</Checkbox>\\n<Checkbox labelPlacement=\\\"right\\\">在右边</Checkbox>\\n<Checkbox labelPlacement=\\\"left\\\">在左边</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox labelPlacement=\"bottom\" mdxType=\"Checkbox\">在下面</Checkbox>\n    <Checkbox labelPlacement=\"top\" mdxType=\"Checkbox\">在上面</Checkbox>\n    <Checkbox labelPlacement=\"right\" mdxType=\"Checkbox\">在右边</Checkbox>\n    <Checkbox labelPlacement=\"left\" mdxType=\"Checkbox\">在左边</Checkbox>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"children标签离多选框距离\"\n    }}>{`children标签离多选框距离`}</h2>\n    <p>{`通过设置 labelDistance 属性为 \"合法的css长度单位\" 设置children标签离多选框的距离。(默认.5em)`}</p>\n    <Playground __position={8} __code={'<Checkbox labelDistance={24}>24px</Checkbox>\\n<Checkbox labelDistance=\\\"3em\\\">3em</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox labelDistance={24} mdxType=\"Checkbox\">24px</Checkbox>\n    <Checkbox labelDistance=\"3em\" mdxType=\"Checkbox\">3em</Checkbox>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"禁用状态\"\n    }}>{`禁用状态`}</h2>\n    <p>{`通过设置 disabled 属性为 true 禁用选择框`}</p>\n    <Playground __position={10} __code={'<Checkbox disabled>禁用状态</Checkbox>\\n<Checkbox disabled checked>\\n  禁用状态\\n</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox disabled mdxType=\"Checkbox\">禁用状态</Checkbox>\n    <Checkbox disabled checked mdxType=\"Checkbox\">禁用状态</Checkbox>\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"其他原生html-input-typecheckbox-的属性\"\n    }}>{`其他原生HTML input type=\"checkbox\" 的属性`}</h2>\n    <p>{`受控、非受控，id等。`}</p>\n    <br />\n    <h2 {...{\n      \"id\": \"选择框群组\"\n    }}>{`选择框群组`}</h2>\n    <p>{`可以通过Checkbox.Group包裹Checkbox，来集体控制Checkbox。Group是个纯粹控制组件，不生成元素。`}</p>\n    <p>{`不要求是直接子代关系，可以任意布局。但是要求Checkbox填写 name 属性，未填写的不算在Group里。`}</p>\n    <p>{`可以通过给Checkbox.Group 设置 disabled 属性为 true，来禁用这个群组里的所有选择框。`}</p>\n    <p>{`可以通过给Checkbox.Group 设置 max 属性来限制这个群组最多勾选几个选择框，默认不限制。`}</p>\n    <p>{`可以给非受控的Checkbox.Group设置 defaultValue 属性来控制其默认选中项。`}</p>\n    <Playground __position={13} __code={'() => {\\n  const [group1, setGroup1] = React.useState([])\\n  const [group2, setGroup2] = React.useState([\\'g\\'])\\n  return (\\n    <>\\n      <Checkbox.Group onChange={value => setGroup1(value)}>\\n        <Checkbox name=\\\"a\\\">选择框a</Checkbox>\\n        <Checkbox name=\\\"b\\\">选择框b</Checkbox>\\n      </Checkbox.Group>\\n      <span style={{ marginLeft: 24 }}>群组值： [{group1.join(\\', \\')}]</span>\\n      <div />\\n      <Checkbox.Group disabled>\\n        <Checkbox name=\\\"c\\\">选择框c</Checkbox>\\n        <Checkbox name=\\\"d\\\">选择框d</Checkbox>\\n        <Checkbox>选择框未填name，所以不被禁用</Checkbox>\\n      </Checkbox.Group>\\n      <div />\\n      <Checkbox.Group\\n        defaultValue={group2}\\n        max={2}\\n        onChange={value => setGroup2(value)}\\n      >\\n        <Checkbox name=\\\"f\\\">选择框f</Checkbox>\\n        <Checkbox name=\\\"g\\\">选择框g</Checkbox>\\n        <Checkbox name=\\\"h\\\">选择框h</Checkbox>\\n        <Checkbox name=\\\"i\\\">选择框i</Checkbox>\\n        <span style={{ marginLeft: 24 }}>群组值： [{group2.join(\\', \\')}]</span>\\n      </Checkbox.Group>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [group1, setGroup1] = React.useState([]);\n        const [group2, setGroup2] = React.useState(['g']);\n        return <>\n                <Checkbox.Group onChange={value => setGroup1(value)}>\n                    <Checkbox name=\"a\" mdxType=\"Checkbox\">选择框a</Checkbox>\n                    <Checkbox name=\"b\" mdxType=\"Checkbox\">选择框b</Checkbox>\n                </Checkbox.Group>\n                <span style={{\n            marginLeft: 24\n          }}>群组值： [{group1.join(', ')}]</span>\n                <div />\n                <Checkbox.Group disabled>\n                    <Checkbox name=\"c\" mdxType=\"Checkbox\">选择框c</Checkbox>\n                    <Checkbox name=\"d\" mdxType=\"Checkbox\">选择框d</Checkbox>\n                    <Checkbox mdxType=\"Checkbox\">选择框未填name，所以不被禁用</Checkbox>\n                </Checkbox.Group>\n                <div />\n                <Checkbox.Group defaultValue={group2} max={2} onChange={value => setGroup2(value)}>\n                    <Checkbox name=\"f\" mdxType=\"Checkbox\">选择框f</Checkbox>\n                    <Checkbox name=\"g\" mdxType=\"Checkbox\">选择框g</Checkbox>\n                    <Checkbox name=\"h\" mdxType=\"Checkbox\">选择框h</Checkbox>\n                    <Checkbox name=\"i\" mdxType=\"Checkbox\">选择框i</Checkbox>\n                    <span style={{\n              marginLeft: 24\n            }}>群组值： [{group2.join(', ')}]</span>\n                </Checkbox.Group>\n            </>;\n      }}\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"受控模式下的选择框群组\"\n    }}>{`受控模式下的选择框群组`}</h2>\n    <p>{`通过给 Checkbox.Group 设置 value 和 onChange 属性使其受控。`}</p>\n    <p>{`value 属性要求为仅包含其内Checkbox name的群组。`}</p>\n    <Playground __position={15} __code={'() => {\\n  const [value, setValue] = React.useState([\\'j\\'])\\n  return (\\n    <>\\n      <Checkbox\\n        checked={value.length === 4}\\n        onChange={() =>\\n          setValue(value.length === 4 ? [] : [\\'j\\', \\'k\\', \\'l\\', \\'m\\'])\\n        }\\n      >\\n        全选\\n      </Checkbox>\\n      <div />\\n      <Checkbox.Group value={value} onChange={value => setValue(value)}>\\n        <Checkbox name=\\\"j\\\">选择框j</Checkbox>\\n        <Checkbox name=\\\"k\\\">选择框k</Checkbox>\\n        <Checkbox name=\\\"l\\\">选择框l</Checkbox>\\n        <Checkbox name=\\\"m\\\">选择框m</Checkbox>\\n        <span style={{ marginLeft: 24 }}>群组值： [{value.join(\\', \\')}]</span>\\n      </Checkbox.Group>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [value, setValue] = React.useState(['j']);\n        return <>\n                <Checkbox checked={value.length === 4} onChange={() => setValue(value.length === 4 ? [] : ['j', 'k', 'l', \"m\"])} mdxType=\"Checkbox\">全选</Checkbox>\n                <div />\n                <Checkbox.Group value={value} onChange={value => setValue(value)}>\n                    <Checkbox name=\"j\" mdxType=\"Checkbox\">选择框j</Checkbox>\n                    <Checkbox name=\"k\" mdxType=\"Checkbox\">选择框k</Checkbox>\n                    <Checkbox name=\"l\" mdxType=\"Checkbox\">选择框l</Checkbox>\n                    <Checkbox name=\"m\" mdxType=\"Checkbox\">选择框m</Checkbox>\n                    <span style={{\n              marginLeft: 24\n            }}>群组值： [{value.join(', ')}]</span>\n                </Checkbox.Group>\n            </>;\n      }}\n    </Playground>\n    <br />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`interactive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`可交互背景`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"background\" `}{`|`}{` boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"background\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`color`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`颜色`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"合法的css颜色字符串\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"#3E4DA7\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`size`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`大小`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\" \"合法的css长度单位\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"20px\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelPlacement`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`标签位置`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"bottom\" `}{`|`}{` \"top\" `}{`|`}{` \"left\" `}{`|`}{` \"right\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"right\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`labelDistance`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`标签距离`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"合法的css长度单位\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\".5em\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`disabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`禁用状态`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`其他`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`html属性`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`如 id, required 等`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}